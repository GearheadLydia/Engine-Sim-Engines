import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)

public node bmw_s52b32_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 7250 * units.rpm;
    input limiter_duration: 0.08;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wire1, (0.0/6.0) * cycle)
            .connect_wire(wires.wire5, (1.0/6.0) * cycle)
            .connect_wire(wires.wire3, (2.0/6.0) * cycle)
            .connect_wire(wires.wire6, (3.0/6.0) * cycle)
            .connect_wire(wires.wire2, (4.0/6.0) * cycle)
            .connect_wire(wires.wire4, (5.0/6.0) * cycle);
}

private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
    output wire5: ignition_wire();
    output wire6: ignition_wire();
}


// stock camshaft specs should be accurate
// http://www.318ti.org/forum/showthread.php?t=42043

public node bmw_s52b32_lobe_profile_int {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 252 * units.deg,
            gamma: 1.0,
            lift: 10.2 * units.mm,
            steps: 100
        );
}

public node bmw_s52b32_lobe_profile_exh {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 244 * units.deg,
            gamma: 1.0,
            lift: 10.2 * units.mm,
            steps: 100
        );
}

public node bmw_s52b32_camshaft_builder {
    input lobe_profile: bmw_s52b32_lobe_profile_int();
    input ex_lobe_profile: bmw_s52b32_lobe_profile_exh();
    input intake_lobe_profile: lobe_profile;
    input exhaust_lobe_profile: ex_lobe_profile;
    input intake_lobe_center: 110.0 * units.deg;
    input exhaust_lobe_center: 110.0 * units.deg;
    input advance: 0.0 * units.deg;
    input base_radius: 16.0 * units.mm;

    output intake_cam_0: _intake_cam_0;
    output exhaust_cam_0: _exhaust_cam_0;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam_0(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_0(params, lobe_profile: exhaust_lobe_profile)


    label rot60(60 * units.deg)
    label rot90(90 * units.deg)
    label rot120(120 * units.deg)
    label rot180(180 * units.deg)
    label rot360(360 * units.deg)

    _intake_cam_0
        .add_lobe(rot360 + intake_lobe_center)
        .add_lobe(rot360 + intake_lobe_center + 4 * rot120)
        .add_lobe(rot360 + intake_lobe_center + 2 * rot120)
        .add_lobe(rot360 + intake_lobe_center + 5 * rot120)
        .add_lobe(rot360 + intake_lobe_center + 1 * rot120)
        .add_lobe(rot360 + intake_lobe_center + 3 * rot120)

    _exhaust_cam_0
        .add_lobe(rot360 - exhaust_lobe_center)
        .add_lobe(rot360 - exhaust_lobe_center + 4 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center + 2 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center + 5 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center + 1 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center + 3 * rot120)
}

private node add_flow_sample {
    input lift;
    input flow;
    input this;
    alias output __out: this;

    this.add_sample(lift * units.thou, k_28inH2O(flow))
}

public node bmw_s52b32_head {
    input intake_camshaft;
    input exhaust_camshaft;
    input chamber_volume: 33.0 * units.cc; // should be correct??
    input flip_display: false;
    
    alias output __out: head;
    
    // https://www.bimmerforums.com/forum/showthread.php?2170385-Cylinder-head-flow-data-S54-vs-S52-vs-M52
    function intake_flow(50 * units.thou)
    intake_flow
        .add_flow_sample(  0,   0.0)
        .add_flow_sample( 50,  38.8)
        .add_flow_sample(100,  78.1)
        .add_flow_sample(150, 118.7)
        .add_flow_sample(200, 156.7)
        .add_flow_sample(250, 192.4)
        .add_flow_sample(300, 220.4)
        .add_flow_sample(350, 232.1)
        .add_flow_sample(400, 233.6)
        .add_flow_sample(450, 235.0)
        .add_flow_sample(500, 237.0) // guess
        .add_flow_sample(550, 238.5) // guess

    function exhaust_flow(50 * units.thou)
    exhaust_flow
        .add_flow_sample(  0,   0.0)
        .add_flow_sample( 50,  33.7)
        .add_flow_sample(100,  69.5)
        .add_flow_sample(150, 105.5)
        .add_flow_sample(200, 143.0)
        .add_flow_sample(250, 170.7)
        .add_flow_sample(300, 180.2)
        .add_flow_sample(350, 188.2)
        .add_flow_sample(400, 189.8)
        .add_flow_sample(450, 192.9)
        .add_flow_sample(500, 196.1)
        .add_flow_sample(550, 197.7)

        
    cylinder_head head(
        chamber_volume: chamber_volume,
        intake_runner_volume: circle_area(1.0 * units.inch) * 3 * units.inch,
        intake_runner_cross_section_area: circle_area(1.0 * units.inch),
        exhaust_runner_volume: circle_area(0.7 * units.inch) * 3 * units.inch,
        exhaust_runner_cross_section_area: circle_area(0.7 * units.inch),

        intake_port_flow: intake_flow,
        exhaust_port_flow: exhaust_flow,
        intake_camshaft: intake_camshaft,
        exhaust_camshaft: exhaust_camshaft,
        flip_display: flip_display
    )
}

// https://www.bimmerforums.com/forum/showthread.php?2270768-Bmw-s52b32-specs-s52-m50-m52
public node bmw_s52b32_engine {
    alias output __out: engine;

    engine engine(
        name: "BMW S52B32",
        starter_torque: 150 * units.lb_ft,
        starter_speed: 1100 * units.rpm,
        redline: 7000 * units.rpm,
        throttle_gamma: 1.0,
        hf_gain: 0.2,
        jitter: 0.6
    )
    
    label lean_angle(30 * units.deg)

    label bore(86.4 * units.mm)
    label stroke(89.6 * units.mm)
    label rod_length(135.0 * units.mm)
    label rod_mass(250 * units.g)
    label piston_mass(425 * units.g)
    label compression_height(30.80 * units.mm)
    label deck_height((210.0 + 1.7) * units.mm) // calculated from rod lengths, piston height, and piston 0.5mm above deck
    label piston_dome(-16.0 * units.cc)
    label crank_mass(4.0 * units.kg)
    label flywheel_mass(8.5 * units.kg)
    label flywheel_radius(5.5 * units.inch)

    label crank_moment(
        disk_moment_of_inertia(mass: crank_mass, radius: stroke / 2)
    )
    label flywheel_moment(
        disk_moment_of_inertia(mass: flywheel_mass, radius: flywheel_radius)
    )
    label other_moment( // Moment from cams, pulleys, etc [estimated]
        disk_moment_of_inertia(mass: 15 * units.kg, radius: 8.0 * units.cm)
    )

    wires wires()

    crankshaft c0(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 5.0 * units.lb_ft,
        moment_of_inertia: crank_moment + flywheel_moment + other_moment,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 90.0 * units.deg + lean_angle
    )

    rod_journal rj1(angle:  0  * units.deg)
    rod_journal rj2(angle: 120 * units.deg)
    rod_journal rj3(angle: 240 * units.deg)
    rod_journal rj4(angle: 240 * units.deg)
    rod_journal rj5(angle: 120 * units.deg)
    rod_journal rj6(angle:  0  * units.deg)
    
    c0
        .add_rod_journal(rj1)
        .add_rod_journal(rj2)
        .add_rod_journal(rj3)
        .add_rod_journal(rj4)
        .add_rod_journal(rj5)
        .add_rod_journal(rj6)

    piston_parameters piston_params(
        mass: piston_mass,
        blowby: k_28inH2O(0.1),
        compression_height: compression_height,
        wrist_pin_position: 0.0,
        displacement: piston_dome
    )

    connecting_rod_parameters cr_params(
        mass: rod_mass,
        moment_of_inertia: rod_moment_of_inertia(
            mass: rod_mass,
            length: rod_length
        ),
        center_of_mass: 0.0,
        length: rod_length
    )

    cylinder_bank_parameters bank_params(
        bore: bore,
        deck_height: deck_height
    )

    intake intake(
        plenum_volume: 3.0 * units.L,
        plenum_cross_section_area: 100.0 * units.cm2,
        intake_flow_rate: k_carb(600.0),
        idle_flow_rate: k_carb(0.001),
        idle_throttle_plate_position: 0.9975,
        throttle_gamma: 1.0,
        runner_flow_rate: k_carb(250.0),
        runner_length: 8.0 * units.inch,
        velocity_decay: 0.1
    )
    
    label exhaust_radius((3.0 * units.inch)/2)

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(550.0),
        primary_tube_length: 10.0 * units.inch,
        primary_flow_rate: k_carb(200.0),
        velocity_decay: 1.0, //0.5
        collector_cross_section_area: circle_area(exhaust_radius),
        length: 2700 * units.mm,
        volume: (2700 * units.mm * circle_area(exhaust_radius))
    )

    exhaust_system exhaust(es_params, audio_volume: 1.0 * 0.05, impulse_response: ir_lib.default_0)
    
    label pipe_length_1(3.2 * units.inch)
    label pipe_length_2(1.6 * units.inch)
    label pipe_length_3(0.0 * units.inch)
    
    label exhaust_stagger(10 * units.inch)
 
    cylinder_bank b0(bank_params, angle: 0 * units.deg + lean_angle)
    b0
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            ignition_wire: wires.wire1,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_1 + exhaust_stagger,
            sound_attenuation: 0.8
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            ignition_wire: wires.wire2,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_2 + exhaust_stagger,
            sound_attenuation: 0.8
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            ignition_wire: wires.wire3,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_3 + exhaust_stagger,
            sound_attenuation: 0.8
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            ignition_wire: wires.wire4,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_1,
            sound_attenuation: 1.0
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj5,
            ignition_wire: wires.wire5,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_2,
            sound_attenuation: 1.0
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj6,
            ignition_wire: wires.wire6,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_3,
            sound_attenuation: 1.0
        )

    engine
        .add_cylinder_bank(b0)

    engine.add_crankshaft(c0)

    bmw_s52b32_camshaft_builder camshaft(
        lobe_profile: bmw_s52b32_lobe_profile_int(),
        ex_lobe_profile: bmw_s52b32_lobe_profile_exh()
    )

    b0.set_cylinder_head (
        bmw_s52b32_head(
            intake_camshaft: camshaft.intake_cam_0,
            exhaust_camshaft: camshaft.exhaust_cam_0,
            flip_display: true
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, 30 * units.deg)
        .add_sample(1000 * units.rpm, 42 * units.deg)
        .add_sample(2000 * units.rpm, 45 * units.deg)
        .add_sample(3000 * units.rpm, 45 * units.deg)
        .add_sample(4000 * units.rpm, 45 * units.deg)
        .add_sample(5000 * units.rpm, 45 * units.deg)
        .add_sample(6000 * units.rpm, 45 * units.deg)
        .add_sample(7000 * units.rpm, 45 * units.deg)
        .add_sample(8000 * units.rpm, 45 * units.deg)

    engine.add_ignition_module(
        bmw_s52b32_distributor(
            wires: wires,
            timing_curve: timing_curve
        ))
}

// 1997 BMW M3 Coupe (E36) USDM
public node bmw_m3_e36_vehicle {
    alias output __out:
        vehicle(
            mass: 1440 * units.kg,
            drag_coefficient: 0.32,
            cross_sectional_area: 1.89 * (units.m * units.m),
            diff_ratio: 3.15,
            tire_radius: 310 * units.mm, // 235/40ZR17
            rolling_resistance: 480 * units.N
        );
}

// 1998 BMW Z3 M Roadster (E36/7) USDM
public node bmw_z3_m_e36_7_vehicle {
    alias output __out:
        vehicle(
            mass: 1400 * units.kg,
            drag_coefficient: 0.42,
            cross_sectional_area: 1.83 * (units.m * units.m),
            diff_ratio: 3.15,
            tire_radius: 313.5 * units.mm, // 245/40ZR17
            rolling_resistance: 500 * units.N
        );
}

// for M3
public node getrag_420g_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 700 * units.lb_ft
        )
        .add_gear(4.23)
        .add_gear(2.53)
        .add_gear(1.67)
        .add_gear(1.23)
        .add_gear(1.00)
        .add_gear(0.83);
}

// for Z3M
public node zf_s5_31_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 600 * units.lb_ft
        )
        .add_gear(4.21)
        .add_gear(2.49)
        .add_gear(1.67)
        .add_gear(1.24)
        .add_gear(1.00);
}

public node main {
    set_engine(bmw_s52b32_engine())
    set_vehicle(bmw_m3_e36_vehicle())
    set_transmission(getrag_420g_transmission())
}

main()