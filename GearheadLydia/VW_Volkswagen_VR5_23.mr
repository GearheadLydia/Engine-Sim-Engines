import "engine_sim.mr"

// Volkswagen VR6 3.2L by GearheadLydia
// 2022-12-04 - revision 3
// may technically mix Golf MkIV and Golf MkV specs

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)

public node volkswagen_vr5_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 6700 * units.rpm;
	input limiter_duration: 0.05;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wire1, (0.0/5.0) * cycle)
            .connect_wire(wires.wire2, (1.0/5.0) * cycle)
			.connect_wire(wires.wire4, (2.0/5.0) * cycle)
			.connect_wire(wires.wire5, (3.0/5.0) * cycle)
			.connect_wire(wires.wire3, (4.0/5.0) * cycle);
}

private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
    output wire5: ignition_wire();
}


public node volkswagen_vr5_lobe_profile_int {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 215 * units.deg,
            gamma: 1.0,
            lift: 10.16 * units.mm,
            steps: 100
        );
}

public node volkswagen_vr5_lobe_profile_exh {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 215 * units.deg,
            gamma: 1.0,
            lift: 10.16 * units.mm,
            steps: 100
        );
}

public node volkswagen_vr5_camshaft_builder {
    input in_lobe_profile: volkswagen_vr5_lobe_profile_int();
	input ex_lobe_profile: volkswagen_vr5_lobe_profile_exh();
    input intake_lobe_profile: in_lobe_profile;
    input exhaust_lobe_profile: ex_lobe_profile;
    input lobe_separation: 115.0 * units.deg;
    input intake_lobe_center: lobe_separation;
    input exhaust_lobe_center: lobe_separation;
    input advance: -0.1 * units.deg;
    input base_radius: 17 * units.mm;

    output intake_cam_R: _intake_cam_R;
    output exhaust_cam_R: _exhaust_cam_R;
    output intake_cam_L: _intake_cam_L;
    output exhaust_cam_L: _exhaust_cam_L;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam_R(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_R(params, lobe_profile: exhaust_lobe_profile)

    camshaft _intake_cam_L(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_L(params, lobe_profile: exhaust_lobe_profile)


    label rot30(30 * units.deg)
	label rot60(60 * units.deg)
    label rot90(90 * units.deg)
    label rot120(120 * units.deg)
    label rot144(144 * units.deg)
    label rot180(180 * units.deg)
    label rot360(360 * units.deg)

    _intake_cam_R
        .add_lobe(rot360 + intake_lobe_center + (0 * rot144))
		.add_lobe(rot360 + intake_lobe_center + (4 * rot144))
		.add_lobe(rot360 + intake_lobe_center + (3 * rot144))

    _intake_cam_L
        .add_lobe(rot360 + intake_lobe_center + (1 * rot144))
		.add_lobe(rot360 + intake_lobe_center + (2 * rot144))

	_exhaust_cam_R
        .add_lobe(rot360 - exhaust_lobe_center + (0 * rot144))
		.add_lobe(rot360 - exhaust_lobe_center + (4 * rot144))
		.add_lobe(rot360 - exhaust_lobe_center + (3 * rot144))

	_exhaust_cam_L
        .add_lobe(rot360 - exhaust_lobe_center + (1 * rot144))
		.add_lobe(rot360 - exhaust_lobe_center + (2 * rot144))
}

private node add_flow_sample {
    input lift;
    input flow;
    input this;
    alias output __out: this;

    this.add_sample(lift * units.thou, k_28inH2O(flow))
}

public node volkswagen_vr5_head {
    input intake_camshaft;
    input exhaust_camshaft;
    input chamber_volume: 45.0 * units.cc;
	input intake_runner_volume: circle_area(1.1 * units.inch) * 2 * units.inch;
	input intake_runner_cross_section_area: circle_area(1.1 * units.inch);
	input exhaust_runner_volume: circle_area(0.85 * units.inch) * 2 * units.inch;
	input exhaust_runner_cross_section_area: circle_area(0.85 * units.inch);
    input flip_display: false;
	
	input flow_attenuation: 0.9;
    input lift_scale: 50.0;
    alias output __out: head;

    function intake_flow(50 * units.thou)
    intake_flow
        .add_flow_sample(0,    0  * flow_attenuation)
        .add_flow_sample(50,   25 * flow_attenuation)
        .add_flow_sample(100,  76 * flow_attenuation)
        .add_flow_sample(150, 100 * flow_attenuation)
        .add_flow_sample(200, 146 * flow_attenuation)
        .add_flow_sample(250, 175 * flow_attenuation)
        .add_flow_sample(300, 212 * flow_attenuation)
        .add_flow_sample(350, 230 * flow_attenuation)
        .add_flow_sample(400, 255 * flow_attenuation)
        .add_flow_sample(450, 275 * flow_attenuation)
        .add_flow_sample(500, 294 * flow_attenuation)
        .add_flow_sample(550, 300 * flow_attenuation)
        .add_flow_sample(600, 314 * flow_attenuation)
        .add_flow_sample(650, 314 * flow_attenuation)
        .add_flow_sample(700, 314 * flow_attenuation)

    function exhaust_flow(50 * units.thou)
    exhaust_flow
        .add_flow_sample(0,    0  * flow_attenuation)
        .add_flow_sample(50,   25 * flow_attenuation)
        .add_flow_sample(100,  70 * flow_attenuation)
        .add_flow_sample(150, 100 * flow_attenuation)
        .add_flow_sample(200, 132 * flow_attenuation)
        .add_flow_sample(250, 140 * flow_attenuation)
        .add_flow_sample(300, 156 * flow_attenuation)
        .add_flow_sample(350, 170 * flow_attenuation)
        .add_flow_sample(400, 181 * flow_attenuation)
        .add_flow_sample(450, 191 * flow_attenuation)
        .add_flow_sample(500, 207 * flow_attenuation)
        .add_flow_sample(550, 214 * flow_attenuation)
        .add_flow_sample(600, 228 * flow_attenuation)
        .add_flow_sample(650, 228 * flow_attenuation)
        .add_flow_sample(700, 228 * flow_attenuation)


		
    cylinder_head head(
        chamber_volume: chamber_volume,
        intake_runner_volume: intake_runner_volume,
        intake_runner_cross_section_area: intake_runner_cross_section_area,
        exhaust_runner_volume: exhaust_runner_volume,
        exhaust_runner_cross_section_area: exhaust_runner_cross_section_area,

        intake_port_flow: intake_flow,
        exhaust_port_flow: exhaust_flow,
        intake_camshaft: intake_camshaft,
        exhaust_camshaft: exhaust_camshaft,
        flip_display: flip_display
    )
}

public node vr5_23 {
    alias output __out: engine;

    wires wires()
	
	label lean_angle(0.0 * units.deg)

    label bore(81.0 * units.mm)
    label stroke(90.3 * units.mm)
    label rod_length(164.0 * units.mm)
    label rod_mass(434 * units.g)
	label piston_mass(400 * units.g)
    label compression_height(37.1 * units.mm)
	label piston_dome(10.0 * units.cc)
	label deck_height(248.00 * units.mm)
    label crank_mass(55 * units.lb)
    label flywheel_mass(25 * units.lb)
    label flywheel_radius(6 * units.inch)

    engine engine(
        name: "Volkswagen VR5 20V",
        starter_torque: 150 * units.lb_ft,
		starter_speed: 850 * units.rpm,
        redline: 6400 * units.rpm,
        fuel: fuel(
            max_turbulence_effect: 8.0,
            burning_efficiency_randomness: 0.2,
            max_burning_efficiency: 0.85),
        throttle_gamma: 1.5
    )

    label crank_moment(
        disk_moment_of_inertia(mass: crank_mass, radius: stroke / 2)
    )
    label flywheel_moment(
        disk_moment_of_inertia(mass: flywheel_mass, radius: flywheel_radius)
    )
    label other_moment( // Moment from cams, pulleys, etc [estimated]
        disk_moment_of_inertia(mass: 15 * units.kg, radius: 8.0 * units.cm)
    )

    crankshaft c0(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 10.0 * units.lb_ft,
        moment_of_inertia: crank_moment + flywheel_moment + other_moment,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 90 * units.deg + lean_angle
    )

    rod_journal rj0(angle: (((0.0 / 5.0) * 360) - 7.5) * units.deg)
	rod_journal rj1(angle: (((2.0 / 5.0) * 360) + 7.5) * units.deg)
	rod_journal rj2(angle: (((3.0 / 5.0) * 360) - 7.5) * units.deg)
	rod_journal rj3(angle: (((4.0 / 5.0) * 360) + 7.5) * units.deg)
    rod_journal rj4(angle: (((1.0 / 5.0) * 360) - 7.5) * units.deg)

    c0
        .add_rod_journal(rj0)
        .add_rod_journal(rj1)
        .add_rod_journal(rj2)
        .add_rod_journal(rj3)
        .add_rod_journal(rj4)


    piston_parameters piston_params(
        mass: piston_mass,
        //blowby: 0,
        compression_height: compression_height,
        wrist_pin_position: 0.0,
        displacement: piston_dome
    )

    connecting_rod_parameters cr_params(
        mass: rod_mass,
        moment_of_inertia: rod_moment_of_inertia(
            mass: rod_mass,
            length: rod_length
        ),
        center_of_mass: 0.0,
        length: rod_length
    )

    cylinder_bank_parameters bank_params(
        bore: bore,
        deck_height: deck_height
    )

    intake intake(
        plenum_volume: 1.5 * units.L,
        plenum_cross_section_area: 75.0 * units.cm2,
        intake_flow_rate: k_carb(300.0),
        idle_flow_rate: k_carb(0.001),
        idle_throttle_plate_position: 0.993,
        throttle_gamma: 1.0,
        runner_flow_rate: k_carb(190.0),
        runner_length: 6.0 * units.inch,
        velocity_decay: 0.1
    )
	
	label exhaust_radius((2.5 * units.inch)/2)

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(300.0),
        primary_tube_length: 12.0 * units.inch,
        primary_flow_rate: k_carb(100.0),
        velocity_decay: 1.0, //0.5
		collector_cross_section_area: circle_area(exhaust_radius),
		length: 2200 * units.mm,
		volume: 2200 * units.mm * circle_area(exhaust_radius)
    )

    exhaust_system exhaust(es_params, audio_volume: 1.0*0.05, impulse_response: ir_lib.default_0)
	
	label position_x_offset(deck_height * 0.13052619222005159154840622789549)  // sin(7.5)
	label position_y_offset(deck_height * -0.00855513862618958885544247307144) // 1-cos(7.5)
	
	label pipe_length_1(40 * units.mm)
	label pipe_length_2(20 * units.mm)
	label pipe_length_3(00 * units.mm)
	label pipe_length_4(00 * units.mm)
	label pipe_length_5(20 * units.mm)
	label pipe_length_6(40 * units.mm)
	label exhaust_stagger(40 * units.mm)

	cylinder_bank bR(bank_params, angle: -7.5 * units.deg + lean_angle) // R (first) | angle: 7.5
    //cylinder_bank bR(bank_params, angle: 0, position_x: position_x_offset, position_y: position_y_offset) // R (first) | angle: -7.5
    bR
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj0,
            ignition_wire: wires.wire1,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_1 + exhaust_stagger,
			sound_attenuation: 0.72
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            ignition_wire: wires.wire3,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_3 + exhaust_stagger,
			sound_attenuation: 0.9
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            ignition_wire: wires.wire5,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_5 + exhaust_stagger,
			sound_attenuation: 0.81
        )

	cylinder_bank bL(bank_params, angle: 7.5 * units.deg + lean_angle) // L (second)
    //cylinder_bank bL(bank_params, angle: 0, position_x: -position_x_offset, position_y: position_y_offset) // L (second) | angle: 7.5
    bL
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            ignition_wire: wires.wire2,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_2,
			sound_attenuation: 0.9
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            ignition_wire: wires.wire4,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_4,
			sound_attenuation: 1.0
        )

    engine
        .add_cylinder_bank(bR)
        .add_cylinder_bank(bL)

    engine.add_crankshaft(c0)

    volkswagen_vr5_camshaft_builder camshaft(
	    in_lobe_profile: volkswagen_vr5_lobe_profile_int(),
		ex_lobe_profile: volkswagen_vr5_lobe_profile_exh()
	)

    bR.set_cylinder_head (
        volkswagen_vr5_head(
            intake_camshaft: camshaft.intake_cam_R,
            exhaust_camshaft: camshaft.exhaust_cam_R,
			flow_attenuation: 0.65,
			intake_runner_volume: circle_area(0.9 * units.inch) * 2 * units.inch,
			intake_runner_cross_section_area: circle_area(0.9 * units.inch),
			exhaust_runner_volume: circle_area(0.68 * units.inch) * 5 * units.inch,
			exhaust_runner_cross_section_area: circle_area(0.48 * units.inch),
            flip_display: true
        )
    )
    bL.set_cylinder_head (
        volkswagen_vr5_head(
            intake_camshaft: camshaft.intake_cam_L,
            exhaust_camshaft: camshaft.exhaust_cam_L,
			flow_attenuation: 0.65,
			intake_runner_volume: circle_area(0.9 * units.inch) * 5 * units.inch,
			intake_runner_cross_section_area: circle_area(0.9 * units.inch),
			exhaust_runner_volume: circle_area(0.68 * units.inch) * 2 * units.inch,
			exhaust_runner_cross_section_area: circle_area(0.48 * units.inch),
            flip_display: true
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm,  5 * units.deg)
        .add_sample(1000 * units.rpm, 25 * units.deg)
        .add_sample(2000 * units.rpm, 30 * units.deg)
        .add_sample(3000 * units.rpm, 35 * units.deg)
        .add_sample(4000 * units.rpm, 40 * units.deg)
        .add_sample(5000 * units.rpm, 42 * units.deg)
        .add_sample(6000 * units.rpm, 45 * units.deg)
		.add_sample(7000 * units.rpm, 45 * units.deg)
		.add_sample(8000 * units.rpm, 45 * units.deg)
		.add_sample(9000 * units.rpm, 45 * units.deg)

    engine.add_ignition_module(
        volkswagen_vr5_distributor(
            wires: wires,
            timing_curve: timing_curve,
            rev_limit: 6700 * units.rpm
        )
    )
}

// 2002 Volkswagen Golf VR5
// gears borrowed from GTI VR6
public node volkswagen_golf_vr5_mkiv_vehicle {
    alias output __out:
        vehicle(
            mass: 2676 * units.lb,
            drag_coefficient: 0.31,
            cross_sectional_area: 22.04 * (units.foot * units.foot),
            diff_ratio: 3.389,
            tire_radius: 316 * units.mm, // P205/55R16
            rolling_resistance: 420 * units.N
        );
}

public node volkswagen_golf_vr5_mkiv_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 500 * units.lb_ft
        )
        .add_gear(3.625)
        .add_gear(2.071)
        .add_gear(1.474)
        .add_gear(1.038)
        .add_gear(0.844);
}

public node main {
    set_engine(vr5_23())
    set_vehicle(volkswagen_golf_vr5_mkiv_vehicle())
    set_transmission(volkswagen_golf_vr5_mkiv_transmission())
}

main()