import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)

public node ferrari_dino_v6_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 8050 * units.rpm;
    input limiter_duration: 0.12;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wire1, (0.0/6.0) * cycle)
            .connect_wire(wires.wire4, (1.0/6.0) * cycle)
            .connect_wire(wires.wire2, (2.0/6.0) * cycle)
            .connect_wire(wires.wire5, (3.0/6.0) * cycle)
            .connect_wire(wires.wire3, (4.0/6.0) * cycle)
            .connect_wire(wires.wire6, (5.0/6.0) * cycle);
}

private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
    output wire5: ignition_wire();
    output wire6: ignition_wire();
}

// using some aftermarket data as reference
// http://www.webcamshafts.com/pages_vehicles/automobile/ferrari_install_data/tc_000138_000389.html
public node ferrari_dino_v6_lobe_profile_int {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 233 * units.deg, // catalog says 263 for aftermarket
            gamma: 1.0,
            lift: 9.0 * units.mm, // catalog says 9.22 for aftermarket
            steps: 100
        );
}

public node ferrari_dino_v6_lobe_profile_exh {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 233 * units.deg, // catalog says 263 for aftermarket
            gamma: 1.0,
            lift: 9.0 * units.mm, // catalog says 9.22 for aftermarket
            steps: 100
        );
}

public node ferrari_dino_v6_camshaft_builder {
    input in_lobe_profile: ferrari_dino_v6_lobe_profile_int();
    input ex_lobe_profile: ferrari_dino_v6_lobe_profile_exh();
    input intake_lobe_profile: in_lobe_profile;
    input exhaust_lobe_profile: ex_lobe_profile;
    input intake_lobe_center: 105.0 * units.deg;
    input exhaust_lobe_center: 107.0 * units.deg;
    input advance: 0.0 * units.deg;
    input base_radius: 15 * units.mm;

    output intake_cam_L: _intake_cam_L;
    output exhaust_cam_L: _exhaust_cam_L;
    output intake_cam_R: _intake_cam_R;
    output exhaust_cam_R: _exhaust_cam_R;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam_L(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_L(params, lobe_profile: exhaust_lobe_profile)

    camshaft _intake_cam_R(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_R(params, lobe_profile: exhaust_lobe_profile)


    label rot30(30 * units.deg)
    label rot60(60 * units.deg)
    label rot90(90 * units.deg)
    label rot120(120 * units.deg)
    label rot180(180 * units.deg)
    label rot360(360 * units.deg)

    _intake_cam_L
        .add_lobe(rot360 + intake_lobe_center + (0 * rot120))
        .add_lobe(rot360 + intake_lobe_center + (2 * rot120))
        .add_lobe(rot360 + intake_lobe_center + (4 * rot120))

    _exhaust_cam_L
        .add_lobe(rot360 - exhaust_lobe_center + (0 * rot120))
        .add_lobe(rot360 - exhaust_lobe_center + (2 * rot120))
        .add_lobe(rot360 - exhaust_lobe_center + (4 * rot120))

    _intake_cam_R
        .add_lobe(rot360 + intake_lobe_center + (1 * rot120))
        .add_lobe(rot360 + intake_lobe_center + (3 * rot120))
        .add_lobe(rot360 + intake_lobe_center + (5 * rot120))

    _exhaust_cam_R
        .add_lobe(rot360 - exhaust_lobe_center + (1 * rot120))
        .add_lobe(rot360 - exhaust_lobe_center + (3 * rot120))
        .add_lobe(rot360 - exhaust_lobe_center + (5 * rot120))
}

public node ferrari_dino_v6_head {
    input intake_camshaft;
    input exhaust_camshaft;
    input chamber_volume: 43.0 * units.cc; // vague guess based on compression ratio
    input flip_display: false;
    
    // guesses
    input flow_intake: 210.0;
    input flow_exhaust: 180.0;
    input lift_max: 9.0 * units.mm;
    alias output __out: head;

    function intake_flow(lift_max / 5.0)
    intake_flow
        .add_sample(0.0 * lift_max, k_28inH2O(0.00 * flow_intake))
        .add_sample(0.2 * lift_max, k_28inH2O(0.32 * flow_intake))
        .add_sample(0.4 * lift_max, k_28inH2O(0.63 * flow_intake))
        .add_sample(0.6 * lift_max, k_28inH2O(0.83 * flow_intake))
        .add_sample(0.8 * lift_max, k_28inH2O(0.95 * flow_intake))
        .add_sample(1.0 * lift_max, k_28inH2O(1.00 * flow_intake))
        .add_sample(1.2 * lift_max, k_28inH2O(1.02 * flow_intake))

    function exhaust_flow(lift_max / 5.0)
    exhaust_flow
        .add_sample(0.0 * lift_max, k_28inH2O(0.00 * flow_exhaust))
        .add_sample(0.2 * lift_max, k_28inH2O(0.32 * flow_exhaust))
        .add_sample(0.4 * lift_max, k_28inH2O(0.63 * flow_exhaust))
        .add_sample(0.6 * lift_max, k_28inH2O(0.83 * flow_exhaust))
        .add_sample(0.8 * lift_max, k_28inH2O(0.95 * flow_exhaust))
        .add_sample(1.0 * lift_max, k_28inH2O(1.00 * flow_exhaust))
        .add_sample(1.2 * lift_max, k_28inH2O(1.02 * flow_exhaust))

        
    cylinder_head head(
        chamber_volume: chamber_volume,
        intake_runner_volume: circle_area(0.9 * units.inch) * 4 * units.inch,
        intake_runner_cross_section_area: circle_area(0.9 * units.inch),
        exhaust_runner_volume: circle_area(0.75 * units.inch) * 3 * units.inch,
        exhaust_runner_cross_section_area: circle_area(0.75 * units.inch),

        intake_port_flow: intake_flow,
        exhaust_port_flow: exhaust_flow,
        intake_camshaft: intake_camshaft,
        exhaust_camshaft: exhaust_camshaft,
        flip_display: flip_display
    )
}

// https://cnc-motorsports.com/je-pistons-362210-forged-ferrari-246-2-4l-2v-dohc-v6-dome-93-5mm-bore.html
public node ferrari_dino_v6_24_engine {
    alias output __out: engine;

    wires wires()

    engine engine(
        name: "Ferrari Dino V6",
        starter_torque: 150 * units.lb_ft,
        starter_speed: 1200 * units.rpm,
        redline: 8000 * units.rpm,
        throttle_gamma: 1.0
    )

    label bore(92.5 * units.mm)
    label stroke(60.0 * units.mm)
    label rod_length(118.0 * units.mm)
    label rod_mass(500 * units.g)
    label piston_mass(400 * units.g)
    label compression_height(30.0 * units.mm)
    label deck_height((180.0 + 1.0) * units.mm) // guess based on JE pistons
    label piston_dome(13.0 * units.cc)
    label crank_mass(75 * units.lb)
    label flywheel_mass(10 * units.lb)
    label flywheel_radius(5 * units.inch)

    label crank_moment(
        disk_moment_of_inertia(mass: crank_mass, radius: stroke / 2)
    )
    label flywheel_moment(
        disk_moment_of_inertia(mass: flywheel_mass, radius: flywheel_radius)
    )
    label other_moment( // Moment from cams, pulleys, etc [estimated]
        disk_moment_of_inertia(mass: 15 * units.kg, radius: 8.0 * units.cm)
    )

    crankshaft c0(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 5.0 * units.lb_ft,
        moment_of_inertia: crank_moment + flywheel_moment + other_moment,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 122.5 * units.deg // 32.5 deg CCW from vertical
    )

    rod_journal rj1(angle:   0 * units.deg)
    rod_journal rj2(angle:  55 * units.deg)
    rod_journal rj3(angle: 240 * units.deg)
    rod_journal rj4(angle: 295 * units.deg)
    rod_journal rj5(angle: 120 * units.deg)
    rod_journal rj6(angle: 175 * units.deg)

    c0
        .add_rod_journal(rj1)
        .add_rod_journal(rj2)
        .add_rod_journal(rj3)
        .add_rod_journal(rj4)
        .add_rod_journal(rj5)
        .add_rod_journal(rj6)


    piston_parameters piston_params(
        mass: piston_mass,
        blowby: k_28inH2O(0.1),
        compression_height: compression_height,
        wrist_pin_position: 0.0,
        displacement: piston_dome
    )

    connecting_rod_parameters cr_params(
        mass: rod_mass,
        moment_of_inertia: rod_moment_of_inertia(
            mass: rod_mass,
            length: rod_length
        ),
        center_of_mass: 0.0,
        length: rod_length
    )

    cylinder_bank_parameters bank_params(
        bore: bore,
        deck_height: deck_height
    )

    intake carb1 (
        plenum_volume: 1.0 * units.L,
        plenum_cross_section_area: 50.0 * units.cm2,
        intake_flow_rate: k_carb(250.0),
        idle_flow_rate: k_carb(0.01),
        idle_throttle_plate_position: 0.9984,
        throttle_gamma: 3.0,
        runner_flow_rate: k_carb(180.0),
        runner_length: 6.0 * units.inch,
        velocity_decay: 0.1
    )

    intake carb2 (
        plenum_volume: 1.0 * units.L,
        plenum_cross_section_area: 50.0 * units.cm2,
        intake_flow_rate: k_carb(250.0),
        idle_flow_rate: k_carb(0.01),
        idle_throttle_plate_position: 0.9984,
        throttle_gamma: 3.0,
        runner_flow_rate: k_carb(180.0),
        runner_length: 6.0 * units.inch,
        velocity_decay: 0.1
    )

    intake carb3 (
        plenum_volume: 1.0 * units.L,
        plenum_cross_section_area: 50.0 * units.cm2,
        intake_flow_rate: k_carb(250.0),
        idle_flow_rate: k_carb(0.01),
        idle_throttle_plate_position: 0.9984,
        throttle_gamma: 3.0,
        runner_flow_rate: k_carb(180.0),
        runner_length: 6.0 * units.inch,
        velocity_decay: 0.1
    )
    
    label exhaust_radius((3.0 * units.inch)/2)

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(650.0),
        primary_tube_length: 10.0 * units.inch,
        primary_flow_rate: k_carb(300.0),
        velocity_decay: 1.0, //0.5
        collector_cross_section_area: circle_area(exhaust_radius) * 2,
        length: 1200 * units.mm,
        volume: (1200 * units.mm * circle_area(exhaust_radius) * 2)
    )

    exhaust_system exhaust(es_params, audio_volume: 1.0 * 0.02, impulse_response: ir_lib.default_0)
    
    label pipe_length_1(2.0 * units.inch)
    label pipe_length_2(1.0 * units.inch)
    label pipe_length_3(0.0 * units.inch)
    
    label exhaust_stagger(2 * units.inch) // actually like almost a foot; set here for sound reasons

    cylinder_bank bL(bank_params, angle: 32.5 * units.deg) // L (second, rear)
    bL
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            ignition_wire: wires.wire1,
            intake: carb1,
            exhaust_system: exhaust,
            primary_length: pipe_length_1,
            sound_attenuation: 1.0 * 0.8
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            ignition_wire: wires.wire2,
            intake: carb2,
            exhaust_system: exhaust,
            primary_length: pipe_length_2,
            sound_attenuation: 1.0 * 0.9
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.3)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj5,
            ignition_wire: wires.wire3,
            intake: carb3,
            exhaust_system: exhaust,
            primary_length: pipe_length_3,
            sound_attenuation: 1.0 * 1.0
        )

    cylinder_bank bR(bank_params, angle: -32.5 * units.deg) // R (first, front)
    bR
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            ignition_wire: wires.wire4,
            intake: carb1,
            exhaust_system: exhaust,
            primary_length: pipe_length_1 + exhaust_stagger,
            sound_attenuation: 0.3 * 0.9
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            ignition_wire: wires.wire5,
            intake: carb2,
            exhaust_system: exhaust,
            primary_length: pipe_length_2 + exhaust_stagger,
            sound_attenuation: 0.3 * 1.0
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.3)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj6,
            ignition_wire: wires.wire6,
            intake: carb3,
            exhaust_system: exhaust,
            primary_length: pipe_length_3 + exhaust_stagger,
            sound_attenuation: 0.3 * 0.8
        )

    engine
        .add_cylinder_bank(bL)
        .add_cylinder_bank(bR)

    engine.add_crankshaft(c0)

    ferrari_dino_v6_camshaft_builder camshaft(
        in_lobe_profile: ferrari_dino_v6_lobe_profile_int(),
        ex_lobe_profile: ferrari_dino_v6_lobe_profile_exh()
    )

    bL.set_cylinder_head (
        ferrari_dino_v6_head(
            intake_camshaft: camshaft.intake_cam_L,
            exhaust_camshaft: camshaft.exhaust_cam_L,
            flip_display: true
        )
    )
    bR.set_cylinder_head (
        ferrari_dino_v6_head(
            intake_camshaft: camshaft.intake_cam_R,
            exhaust_camshaft: camshaft.exhaust_cam_R,
            flip_display: false
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, 70 * units.deg)
        .add_sample(1000 * units.rpm, 88 * units.deg)
        .add_sample(2000 * units.rpm, 90 * units.deg)
        .add_sample(3000 * units.rpm, 90 * units.deg)
        .add_sample(4000 * units.rpm, 90 * units.deg)
        .add_sample(5000 * units.rpm, 90 * units.deg)
        .add_sample(6000 * units.rpm, 90 * units.deg)
        .add_sample(7000 * units.rpm, 90 * units.deg)
        .add_sample(8000 * units.rpm, 90 * units.deg)
        .add_sample(9000 * units.rpm, 90 * units.deg)

    engine.add_ignition_module(
        ferrari_dino_v6_distributor(
            wires: wires,
            timing_curve: timing_curve
        )
    )
}

// 1973 Lancia Stratos HF Stradale
public node lancia_stratos_hf_stradale_vehicle {
    alias output __out:
        vehicle(
            mass: 980 * units.kg,
            drag_coefficient: 0.4,
            cross_sectional_area: 1.61 * (units.m * units.m),
            diff_ratio: 3.824,
            tire_radius: 321.5 * units.mm, // 205/70VR14
            rolling_resistance: 400 * units.N
        );
}

public node lancia_stratos_hf_stradale_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 400 * units.lb_ft
        )
        .add_gear(3.554)
        .add_gear(2.459)
        .add_gear(1.781)
        .add_gear(1.320)
        .add_gear(0.986);
}

// 1969 Ferrari 246 GT
public node ferrari_246_gt_vehicle {
    alias output __out:
        vehicle(
            mass: 1080 * units.kg,
            drag_coefficient: 0.37,
            cross_sectional_area: 1.62 * (units.m * units.m),
            diff_ratio: 3.625,
            tire_radius: 324 * units.mm, // 185HR14
            rolling_resistance: 300 * units.N
        );
}

public node ferrari_246_gt_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 300 * units.lb_ft
        )
        .add_gear(3.76)
        .add_gear(2.59)
        .add_gear(1.863)
        .add_gear(1.376)
        .add_gear(1.046);
}

public node main {
    set_engine(ferrari_dino_v6_24_engine())
    set_vehicle(lancia_stratos_hf_stradale_vehicle())
    set_transmission(lancia_stratos_hf_stradale_transmission())
}

main()