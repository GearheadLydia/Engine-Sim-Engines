import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)

// firing order: 12734568
// in standard:  21843657

public node jaguar_aj34_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 7300 * units.rpm;
    input limiter_duration: 0.07;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wire1, (0.0 / 8.0) * cycle)
            .connect_wire(wires.wire2, (1.0 / 8.0) * cycle)
            .connect_wire(wires.wire7, (2.0 / 8.0) * cycle)
            .connect_wire(wires.wire3, (3.0 / 8.0) * cycle)
            .connect_wire(wires.wire4, (4.0 / 8.0) * cycle)
            .connect_wire(wires.wire5, (5.0 / 8.0) * cycle)
            .connect_wire(wires.wire6, (6.0 / 8.0) * cycle)
            .connect_wire(wires.wire8, (7.0 / 8.0) * cycle);
}

private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
    output wire5: ignition_wire();
    output wire6: ignition_wire();
    output wire7: ignition_wire();
    output wire8: ignition_wire();
}

// https://www.jaguarforums.com/forum/jaguar-engines-transmissions-47/camshaft-specifications-aj-v8-4-0l-4-2l-141202/
public node jaguar_aj34_lobe_profile_int {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 240 * units.deg,
            gamma: 1.0,
            lift: 9.0 * units.mm,
            steps: 100
        );
}

public node jaguar_aj34_lobe_profile_exh {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 230 * units.deg,
            gamma: 1.0,
            lift: 8.5 * units.mm,
            steps: 100
        );
}

public node jaguar_aj34_camshaft_builder {
    input in_lobe_profile: jaguar_aj34_lobe_profile_int();
    input ex_lobe_profile: jaguar_aj34_lobe_profile_exh();
    input intake_lobe_profile: in_lobe_profile;
    input exhaust_lobe_profile: ex_lobe_profile;
    input intake_lobe_center: 105.0 * units.deg;  // quoted spec: 135
    input exhaust_lobe_center: 135.0 * units.deg; // quoted spec: 105
    input advance: 0.0 * units.deg;               // angle phasing range is 30 degrees
    input base_radius: 15 * units.mm;

    output intake_cam_L: _intake_cam_L;
    output intake_cam_R: _intake_cam_R;
    output exhaust_cam_L: _exhaust_cam_L;
    output exhaust_cam_R: _exhaust_cam_R;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam_L(params, lobe_profile: intake_lobe_profile)
    camshaft _intake_cam_R(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_L(params, lobe_profile: exhaust_lobe_profile)
    camshaft _exhaust_cam_R(params, lobe_profile: exhaust_lobe_profile)

    label rot90(90 * units.deg)
    label rot360(360 * units.deg)

    // firing order: 12734568
    _intake_cam_L
        .add_lobe(rot360 + intake_lobe_center + 0 * rot90)
        .add_lobe(rot360 + intake_lobe_center + 3 * rot90)
        .add_lobe(rot360 + intake_lobe_center + 5 * rot90)
        .add_lobe(rot360 + intake_lobe_center + 2 * rot90)

    _intake_cam_R
        .add_lobe(rot360 + intake_lobe_center + 1 * rot90)
        .add_lobe(rot360 + intake_lobe_center + 4 * rot90)
        .add_lobe(rot360 + intake_lobe_center + 6 * rot90)
        .add_lobe(rot360 + intake_lobe_center + 7 * rot90)

    _exhaust_cam_L
        .add_lobe(rot360 - exhaust_lobe_center + 0 * rot90)
        .add_lobe(rot360 - exhaust_lobe_center + 3 * rot90)
        .add_lobe(rot360 - exhaust_lobe_center + 5 * rot90)
        .add_lobe(rot360 - exhaust_lobe_center + 2 * rot90)

    _exhaust_cam_R
        .add_lobe(rot360 - exhaust_lobe_center + 1 * rot90)
        .add_lobe(rot360 - exhaust_lobe_center + 4 * rot90)
        .add_lobe(rot360 - exhaust_lobe_center + 6 * rot90)
        .add_lobe(rot360 - exhaust_lobe_center + 7 * rot90)
}

// https://www.jaguarforums.com/forum/jaguar-engines-transmissions-47/xjr-550-project-52518/page3/
public node jaguar_aj34_head {
    input intake_camshaft;
    input exhaust_camshaft;
    input chamber_volume: 43.1 * units.cc; // assumption: same as AJ37
    input flip_display: false;
    
    // guesses
    input flow_intake: 270.0;
    input flow_exhaust: 220.0;
    input lift_max: 9.0 * units.mm;
    alias output __out: head;

    function intake_flow(lift_max / 10.0)
    intake_flow
        .add_sample(0.0 * lift_max, k_28inH2O(0.00 * flow_intake))
        .add_sample(0.1 * lift_max, k_28inH2O(0.16 * flow_intake))
        .add_sample(0.2 * lift_max, k_28inH2O(0.32 * flow_intake))
        .add_sample(0.3 * lift_max, k_28inH2O(0.48 * flow_intake))
        .add_sample(0.4 * lift_max, k_28inH2O(0.63 * flow_intake))
        .add_sample(0.5 * lift_max, k_28inH2O(0.74 * flow_intake))
        .add_sample(0.6 * lift_max, k_28inH2O(0.83 * flow_intake))
        .add_sample(0.7 * lift_max, k_28inH2O(0.90 * flow_intake))
        .add_sample(0.8 * lift_max, k_28inH2O(0.95 * flow_intake))
        .add_sample(0.9 * lift_max, k_28inH2O(0.98 * flow_intake))
        .add_sample(1.0 * lift_max, k_28inH2O(1.00 * flow_intake))
        .add_sample(1.1 * lift_max, k_28inH2O(1.01 * flow_intake))
        .add_sample(1.2 * lift_max, k_28inH2O(1.02 * flow_intake))

    function exhaust_flow(lift_max / 10.0)
    exhaust_flow
        .add_sample(0.0 * lift_max, k_28inH2O(0.00 * flow_exhaust))
        .add_sample(0.1 * lift_max, k_28inH2O(0.16 * flow_exhaust))
        .add_sample(0.2 * lift_max, k_28inH2O(0.32 * flow_exhaust))
        .add_sample(0.3 * lift_max, k_28inH2O(0.48 * flow_exhaust))
        .add_sample(0.4 * lift_max, k_28inH2O(0.63 * flow_exhaust))
        .add_sample(0.5 * lift_max, k_28inH2O(0.74 * flow_exhaust))
        .add_sample(0.6 * lift_max, k_28inH2O(0.83 * flow_exhaust))
        .add_sample(0.7 * lift_max, k_28inH2O(0.90 * flow_exhaust))
        .add_sample(0.8 * lift_max, k_28inH2O(0.95 * flow_exhaust))
        .add_sample(0.9 * lift_max, k_28inH2O(0.98 * flow_exhaust))
        .add_sample(1.0 * lift_max, k_28inH2O(1.00 * flow_exhaust))
        .add_sample(1.1 * lift_max, k_28inH2O(1.01 * flow_exhaust))
        .add_sample(1.2 * lift_max, k_28inH2O(1.02 * flow_exhaust))

    cylinder_head head(
        chamber_volume: chamber_volume,
        intake_runner_volume: circle_area(1.1 * units.inch) * 3 * units.inch,
        intake_runner_cross_section_area: circle_area(1.1 * units.inch),
        exhaust_runner_volume: circle_area(0.8 * units.inch) * 3 * units.inch,
        exhaust_runner_cross_section_area: circle_area(0.8 * units.inch),

        intake_port_flow: intake_flow,
        exhaust_port_flow: exhaust_flow,
        intake_camshaft: intake_camshaft,
        exhaust_camshaft: exhaust_camshaft,
        flip_display: flip_display
    )
}

public node jaguar_aj34_engine {
    alias output __out: engine;

    wires wires()

    engine engine(
        name: "Jaguar AJ34",
        starter_torque: 150 * units.lb_ft,
        starter_speed: 1200 * units.rpm,
        redline: 7000 * units.rpm,
        throttle_gamma: 1.0
    )

    label bore(86.0 * units.mm)
    label bore_spacing(98.0 * units.mm)
    label stroke(90.3 * units.mm)
    label rod_length(148.35 * units.mm)
    label rod_mass(600 * units.g) // guess
    label piston_mass(400 * units.g) // guess
    label compression_height(30.76 * units.mm) // assumption: same as AJ35
    label piston_dome(5.7 * units.cc) // for 10.5:1 CR
    label deck_height((225.55 * units.mm) + (70 * units.thou)) // assumption: same as AJ35
    label crank_mass(75 * units.lb) // guess
    label flywheel_mass(15 * units.lb)
    label flywheel_radius(6 * units.inch)

    label crank_moment(
        disk_moment_of_inertia(mass: crank_mass, radius: stroke / 2)
    )
    label flywheel_moment(
        disk_moment_of_inertia(mass: flywheel_mass, radius: flywheel_radius)
    )
    label other_moment( // Moment from cams, pulleys, etc [estimated]
        disk_moment_of_inertia(mass: 20 * units.kg, radius: 8.0 * units.cm)
    )

    crankshaft c0(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 5.0 * units.lb_ft,
        moment_of_inertia:
            crank_moment + flywheel_moment + other_moment,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 135.0 * units.deg // 45 degrees
    )

    rod_journal rj1(angle:   0 * units.deg)
    rod_journal rj2(angle: 270 * units.deg)
    rod_journal rj3(angle:  90 * units.deg)
    rod_journal rj4(angle: 180 * units.deg)

    c0
        .add_rod_journal(rj1)
        .add_rod_journal(rj2)
        .add_rod_journal(rj3)
        .add_rod_journal(rj4)

    // piston specs are guesses
    piston_parameters piston_params(
        mass: piston_mass,
        blowby: k_28inH2O(0.1),
        compression_height: compression_height,
        wrist_pin_position: 0 * units.mm,
        displacement: piston_dome
    )

    connecting_rod_parameters cr_params(
        mass: rod_mass,
        moment_of_inertia: rod_moment_of_inertia(
            mass: rod_mass,
            length: rod_length
        ),
        center_of_mass: 0.0,
        length: rod_length
    )

    cylinder_bank_parameters bank_params(
        bore: bore,
        deck_height: deck_height
    )

    intake intake(
        plenum_volume: 2.0 * units.L,
        plenum_cross_section_area: 100.0 * units.cm2,
        intake_flow_rate: k_carb(400.0),
        idle_flow_rate: k_carb(0.01),
        idle_throttle_plate_position: 0.995,
        throttle_gamma: 1.0,
        runner_flow_rate: k_carb(200.0),
        runner_length: 8.5 * units.inch,
        velocity_decay: 0.1
    )
    
    label exhaust_radius((3.0 * units.inch)/2)

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(400.0),
        primary_tube_length: 10.0 * units.inch,
        primary_flow_rate: k_carb(200.0),
        velocity_decay: 1.0, //0.5
        collector_cross_section_area: circle_area(exhaust_radius) * 2,
        length: 2700 * units.mm,
        volume: (700 * units.mm * circle_area(exhaust_radius)) + (2000 * units.mm * circle_area(exhaust_radius) * 2)
    )

    exhaust_system exhaust(es_params, audio_volume: 1.0 * 0.1, impulse_response: ir_lib.default_0)

    label pipe_length_1(3.0 * bore_spacing)
    label pipe_length_2(2.0 * bore_spacing)
    label pipe_length_3(1.0 * bore_spacing)
    label pipe_length_4(0.0 * bore_spacing)
    
    label exhaust_stagger(40 * units.mm)

    cylinder_bank bL(bank_params, angle: 45.0 * units.deg) // L (first)
    bL
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            ignition_wire: wires.wire1,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_1 + exhaust_stagger
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            ignition_wire: wires.wire3,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_2 + exhaust_stagger
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            ignition_wire: wires.wire5,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_3 + exhaust_stagger
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            ignition_wire: wires.wire7,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_4 + exhaust_stagger
        )

    cylinder_bank bR(bank_params, angle: -45 * units.deg) // R (second)
    bR
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            ignition_wire: wires.wire2,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_1
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            ignition_wire: wires.wire4,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_2
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            ignition_wire: wires.wire6,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_3
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            ignition_wire: wires.wire8,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_4
        )

    engine
        .add_cylinder_bank(bL)
        .add_cylinder_bank(bR)

    engine.add_crankshaft(c0)

    jaguar_aj34_camshaft_builder camshaft(
        in_lobe_profile: jaguar_aj34_lobe_profile_int(),
        ex_lobe_profile: jaguar_aj34_lobe_profile_exh()
    )

    bL.set_cylinder_head (
        jaguar_aj34_head(
            intake_camshaft: camshaft.intake_cam_L,
            exhaust_camshaft: camshaft.exhaust_cam_L,
            flip_display: true
        )
    )
    bR.set_cylinder_head (
        jaguar_aj34_head(
            intake_camshaft: camshaft.intake_cam_R,
            exhaust_camshaft: camshaft.exhaust_cam_R,
            flip_display: false
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, 77 * units.deg)
        .add_sample(1000 * units.rpm, 82 * units.deg)
        .add_sample(2000 * units.rpm, 82 * units.deg)
        .add_sample(3000 * units.rpm, 82 * units.deg)
        .add_sample(4000 * units.rpm, 82 * units.deg)
        .add_sample(5000 * units.rpm, 82 * units.deg)
        .add_sample(6000 * units.rpm, 82 * units.deg)
        .add_sample(7000 * units.rpm, 82 * units.deg)
        .add_sample(8000 * units.rpm, 82 * units.deg)
        .add_sample(9000 * units.rpm, 82 * units.deg)

    engine.add_ignition_module(
        jaguar_aj34_distributor(
            wires: wires,
            timing_curve: timing_curve
        )
    )
}

// 2004 Jaguar XK8 (X100)
public node jaguar_xk8_x100_vehicle {
    alias output __out:
        vehicle(
            mass: 1685 * units.kg,
            drag_coefficient: 0.35,
            cross_sectional_area: 1.97 * (units.m * units.m),
            diff_ratio: 3.31,
            tire_radius: 338 * units.mm, // 245/50ZR17
            rolling_resistance: 1685 * units.kg * 9.81 * (245.0/275.0) * 0.01
        );
}

// 2006 Jaguar XK 4.2 (X150)
public node jaguar_xk_42_x150_vehicle {
    alias output __out:
        vehicle(
            mass: 1720 * units.kg,
            drag_coefficient: 0.359,
            cross_sectional_area: 2.08 * (units.m * units.m),
            diff_ratio: 3.31,
            tire_radius: 339 * units.mm, // 275/40ZR18
            rolling_resistance: 1720 * units.kg * 9.81 * (275.0/275.0) * 0.01
        );
}

public node zf_6hp26_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 500 * units.lb_ft
        )
        .add_gear(4.171)
        .add_gear(2.340)
        .add_gear(1.521)
        .add_gear(1.143)
        .add_gear(0.867)
        .add_gear(0.691);
}

public node main {
    set_engine(jaguar_aj34_engine())
    set_vehicle(jaguar_xk8_x100_vehicle())
    set_transmission(zf_6hp26_transmission())
}

main()