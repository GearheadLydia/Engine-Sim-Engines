import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)

public node volkswagen_vr6_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 6700 * units.rpm;
    input limiter_duration: 0.08;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wire1, (0.0/6.0) * cycle)
            .connect_wire(wires.wire5, (1.0/6.0) * cycle)
            .connect_wire(wires.wire3, (2.0/6.0) * cycle)
            .connect_wire(wires.wire6, (3.0/6.0) * cycle)
            .connect_wire(wires.wire2, (4.0/6.0) * cycle)
            .connect_wire(wires.wire4, (5.0/6.0) * cycle);
}

private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
    output wire5: ignition_wire();
    output wire6: ignition_wire();
}

// .........................................Intake... ..........Exhaust
// Clearance [cl].....................0.00mm...........0.00mm
// Duration [0.1mm+cl].............272°................258°
// Duration [1.0mm+cl].............211°................207°
// Valve Lift [cl=0]..................9.85mm...........9.90mm
// Cam Lift............................4.95mm...........4 .95mm
// Peak Angle..........................110°............... .110°
// Timing [1.00mm+cl]...........-5/36°..............36/9°
// Lift @ TDC.........................0.65mm...........0.45mm


public node volkswagen_vr6_lobe_profile_int {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 215 * units.deg,
            gamma: 1.0,
            lift: 10.16 * units.mm,
            steps: 100
        );
}

public node volkswagen_vr6_lobe_profile_exh {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 215 * units.deg,
            gamma: 1.0,
            lift: 10.16 * units.mm,
            steps: 100
        );
}

public node volkswagen_vr6_camshaft_builder {
    input in_lobe_profile: volkswagen_vr6_lobe_profile_int();
    input ex_lobe_profile: volkswagen_vr6_lobe_profile_exh();
    input intake_lobe_profile: in_lobe_profile;
    input exhaust_lobe_profile: ex_lobe_profile;
    input lobe_separation: 115.0 * units.deg;
    input intake_lobe_center: lobe_separation;
    input exhaust_lobe_center: lobe_separation;
    input advance: -0.1 * units.deg;
    input base_radius: 17 * units.mm;

    output intake_cam_L: _intake_cam_L;
    output exhaust_cam_L: _exhaust_cam_L;
    output intake_cam_R: _intake_cam_R;
    output exhaust_cam_R: _exhaust_cam_R;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam_L(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_L(params, lobe_profile: exhaust_lobe_profile)

    camshaft _intake_cam_R(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_R(params, lobe_profile: exhaust_lobe_profile)


    label rot30(30 * units.deg)
    label rot60(60 * units.deg)
    label rot90(90 * units.deg)
    label rot120(120 * units.deg)
    label rot180(180 * units.deg)
    label rot360(360 * units.deg)

    _intake_cam_L
        .add_lobe(rot360 + intake_lobe_center + (0 * rot120))
        .add_lobe(rot360 + intake_lobe_center + (2 * rot120))
        .add_lobe(rot360 + intake_lobe_center + (1 * rot120))

    _intake_cam_R
        .add_lobe(rot360 + intake_lobe_center + (4 * rot120))
        .add_lobe(rot360 + intake_lobe_center + (5 * rot120))
        .add_lobe(rot360 + intake_lobe_center + (3 * rot120))

    _exhaust_cam_L
        .add_lobe(rot360 - exhaust_lobe_center + (0 * rot120))
        .add_lobe(rot360 - exhaust_lobe_center + (2 * rot120))
        .add_lobe(rot360 - exhaust_lobe_center + (1 * rot120))

    _exhaust_cam_R
        .add_lobe(rot360 - exhaust_lobe_center + (4 * rot120))
        .add_lobe(rot360 - exhaust_lobe_center + (5 * rot120))
        .add_lobe(rot360 - exhaust_lobe_center + (3 * rot120))
}

public node volkswagen_vr6_head {
    input intake_camshaft;
    input exhaust_camshaft;
    input chamber_volume: 45.0 * units.cc;
    input intake_runner_volume: circle_area(1.1 * units.inch) * 2 * units.inch;
    input intake_runner_cross_section_area: circle_area(1.1 * units.inch);
    input exhaust_runner_volume: circle_area(0.85 * units.inch) * 2 * units.inch;
    input exhaust_runner_cross_section_area: circle_area(0.85 * units.inch);
    input flip_display: false;
    
    // http://www.users.interport.net/s/r/srweiss/tablehdc.htm#VW
    // approximated
    input flow_intake: 160.0;
    input flow_exhaust: 145.0;
    input lift_max: 450 * units.thou;
    alias output __out: head;

    function intake_flow(lift_max / 10.0)
    intake_flow
        .add_sample(0.0 * lift_max, k_28inH2O(0.00 * flow_intake))
        .add_sample(0.1 * lift_max, k_28inH2O(0.16 * flow_intake))
        .add_sample(0.2 * lift_max, k_28inH2O(0.32 * flow_intake))
        .add_sample(0.3 * lift_max, k_28inH2O(0.48 * flow_intake))
        .add_sample(0.4 * lift_max, k_28inH2O(0.63 * flow_intake))
        .add_sample(0.5 * lift_max, k_28inH2O(0.74 * flow_intake))
        .add_sample(0.6 * lift_max, k_28inH2O(0.83 * flow_intake))
        .add_sample(0.7 * lift_max, k_28inH2O(0.90 * flow_intake))
        .add_sample(0.8 * lift_max, k_28inH2O(0.95 * flow_intake))
        .add_sample(0.9 * lift_max, k_28inH2O(0.98 * flow_intake))
        .add_sample(1.0 * lift_max, k_28inH2O(1.00 * flow_intake))
        .add_sample(1.1 * lift_max, k_28inH2O(1.01 * flow_intake))
        .add_sample(1.2 * lift_max, k_28inH2O(1.02 * flow_intake))

    function exhaust_flow(lift_max / 10.0)
    exhaust_flow
        .add_sample(0.0 * lift_max, k_28inH2O(0.00 * flow_exhaust))
        .add_sample(0.1 * lift_max, k_28inH2O(0.16 * flow_exhaust))
        .add_sample(0.2 * lift_max, k_28inH2O(0.32 * flow_exhaust))
        .add_sample(0.3 * lift_max, k_28inH2O(0.48 * flow_exhaust))
        .add_sample(0.4 * lift_max, k_28inH2O(0.63 * flow_exhaust))
        .add_sample(0.5 * lift_max, k_28inH2O(0.74 * flow_exhaust))
        .add_sample(0.6 * lift_max, k_28inH2O(0.83 * flow_exhaust))
        .add_sample(0.7 * lift_max, k_28inH2O(0.90 * flow_exhaust))
        .add_sample(0.8 * lift_max, k_28inH2O(0.95 * flow_exhaust))
        .add_sample(0.9 * lift_max, k_28inH2O(0.98 * flow_exhaust))
        .add_sample(1.0 * lift_max, k_28inH2O(1.00 * flow_exhaust))
        .add_sample(1.1 * lift_max, k_28inH2O(1.01 * flow_exhaust))
        .add_sample(1.2 * lift_max, k_28inH2O(1.02 * flow_exhaust))
        
    cylinder_head head(
        chamber_volume: chamber_volume,
        intake_runner_volume: intake_runner_volume,
        intake_runner_cross_section_area: intake_runner_cross_section_area,
        exhaust_runner_volume: exhaust_runner_volume,
        exhaust_runner_cross_section_area: exhaust_runner_cross_section_area,

        intake_port_flow: intake_flow,
        exhaust_port_flow: exhaust_flow,
        intake_camshaft: intake_camshaft,
        exhaust_camshaft: exhaust_camshaft,
        flip_display: flip_display
    )
}

public node volkswagen_vr6_abv_engine {
    alias output __out: engine;

    wires wires()
    
    label lean_angle(0.0 * units.deg)
    label bank_angle_minor(15 * units.deg / 2)

    label bore(82.0 * units.mm)
    label stroke(90.3 * units.mm)
    label rod_length(164.0 * units.mm)
    label rod_mass(434 * units.g)
    label piston_mass(400 * units.g)
    label compression_height(37.1 * units.mm)
    label piston_dome(10.0 * units.cc)
    label deck_height(248.00 * units.mm)
    label crank_mass(55 * units.lb)
    label flywheel_mass(15 * units.lb)
    label flywheel_radius(6 * units.inch)

    engine engine(
        name: "Volkswagen VR6 12V",
        starter_torque: 150 * units.lb_ft,
        starter_speed: 1200 * units.rpm,
        redline: 6400 * units.rpm,
        throttle_gamma: 1.0
    )

    label crank_moment(
        disk_moment_of_inertia(mass: crank_mass, radius: stroke / 2)
    )
    label flywheel_moment(
        disk_moment_of_inertia(mass: flywheel_mass, radius: flywheel_radius)
    )
    label other_moment( // Moment from cams, pulleys, etc [estimated]
        disk_moment_of_inertia(mass: 15 * units.kg, radius: 8.0 * units.cm)
    )

    crankshaft c0(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 5.0 * units.lb_ft,
        moment_of_inertia: crank_moment + flywheel_moment + other_moment,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 90 * units.deg + lean_angle
    )

    // additional offset
    // allegedly total of 22 degrees, but trigonometry supports about 20.77 degrees for true evenness
    // went for 20.75 degrees to make it a round number
    label crank_pin_offset(bank_angle_minor + 2.875 * units.deg)
    rod_journal rj1(angle:  0  * units.deg + crank_pin_offset)
    rod_journal rj2(angle: 120 * units.deg - crank_pin_offset)
    rod_journal rj3(angle: 240 * units.deg + crank_pin_offset)
    rod_journal rj4(angle: 240 * units.deg - crank_pin_offset)
    rod_journal rj5(angle: 120 * units.deg + crank_pin_offset)
    rod_journal rj6(angle:  0  * units.deg - crank_pin_offset)

    c0
        .add_rod_journal(rj1)
        .add_rod_journal(rj2)
        .add_rod_journal(rj3)
        .add_rod_journal(rj4)
        .add_rod_journal(rj5)
        .add_rod_journal(rj6)


    piston_parameters piston_params(
        mass: piston_mass,
        blowby: k_28inH2O(0.1),
        compression_height: compression_height,
        wrist_pin_position: 0.0,
        displacement: piston_dome
    )

    connecting_rod_parameters cr_params(
        mass: rod_mass,
        moment_of_inertia: rod_moment_of_inertia(
            mass: rod_mass,
            length: rod_length
        ),
        center_of_mass: 0.0,
        length: rod_length
    )

    cylinder_bank_parameters bank_params(
        bore: bore,
        deck_height: deck_height
    )

    intake intake(
        plenum_volume: 1.5 * units.L,
        plenum_cross_section_area: 75.0 * units.cm2,
        intake_flow_rate: k_carb(300.0),
        idle_flow_rate: k_carb(0.001),
        idle_throttle_plate_position: 0.994,
        throttle_gamma: 1.0,
        runner_flow_rate: k_carb(190.0),
        runner_length: 6.0 * units.inch,
        velocity_decay: 0.1
    )
    
    label exhaust_radius((2.5 * units.inch)/2)

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(300.0),
        primary_tube_length: 12.0 * units.inch,
        primary_flow_rate: k_carb(110.0),
        velocity_decay: 1.0, //0.5
        collector_cross_section_area: circle_area(exhaust_radius),
        length: 2500 * units.mm,
        volume: 2500 * units.mm * circle_area(exhaust_radius)
    )

    exhaust_system exhaust(es_params, audio_volume: 1.0*0.05, impulse_response: ir_lib.default_0)
    
    // 12.5mm offset
    label bore_center_offset(12.5 * units.mm)
    // these values do NOT auto-update when bank_angle_minor is changed!!
    label position_x_offset(bore_center_offset *  0.99144486137381041114455752692856) // sin(82.5)
    label position_y_offset(bore_center_offset * -0.13052619222005159154840622789549) // cos(82.5)
    
    label pipe_length_1(80 * units.mm)
    label pipe_length_2(50 * units.mm)
    label pipe_length_3(20 * units.mm)
    label pipe_length_4(00 * units.mm)
    label pipe_length_5(30 * units.mm)
    label pipe_length_6(60 * units.mm)

    cylinder_bank bL(bank_params, angle: bank_angle_minor + lean_angle, position_x: -position_x_offset, position_y: position_y_offset) // L (first) | angle: -7.5
    bL
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            ignition_wire: wires.wire1,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_1
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            ignition_wire: wires.wire3,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_3
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj5,
            ignition_wire: wires.wire5,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_5
        )

    cylinder_bank bR(bank_params, angle: -bank_angle_minor + lean_angle, position_x: position_x_offset, position_y: position_y_offset) // R (second) | angle: 7.5
    bR
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            ignition_wire: wires.wire2,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_2
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            ignition_wire: wires.wire4,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_4
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj6,
            ignition_wire: wires.wire6,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: pipe_length_6
        )

    engine
        .add_cylinder_bank(bL)
        .add_cylinder_bank(bR)

    engine.add_crankshaft(c0)

    volkswagen_vr6_camshaft_builder camshaft(
        in_lobe_profile: volkswagen_vr6_lobe_profile_int(),
        ex_lobe_profile: volkswagen_vr6_lobe_profile_exh()
    )

    label intake_runner_radius(0.9 * units.inch)
    label exhaust_runner_radius(0.48 * units.inch)
    
    label runner_length_shrt(2.75 * units.inch)
    label runner_length_long(4.25 * units.inch)

    bL.set_cylinder_head (
        volkswagen_vr6_head(
            intake_camshaft: camshaft.intake_cam_L,
            exhaust_camshaft: camshaft.exhaust_cam_L,
            intake_runner_volume: circle_area(intake_runner_radius) * runner_length_long,
            intake_runner_cross_section_area: circle_area(intake_runner_radius),
            exhaust_runner_volume: circle_area(exhaust_runner_radius) * runner_length_shrt,
            exhaust_runner_cross_section_area: circle_area(exhaust_runner_radius),
            flip_display: true
        )
    )
    bR.set_cylinder_head (
        volkswagen_vr6_head(
            intake_camshaft: camshaft.intake_cam_R,
            exhaust_camshaft: camshaft.exhaust_cam_R,
            intake_runner_volume: circle_area(intake_runner_radius) * runner_length_shrt,
            intake_runner_cross_section_area: circle_area(intake_runner_radius),
            exhaust_runner_volume: circle_area(exhaust_runner_radius) * runner_length_long,
            exhaust_runner_cross_section_area: circle_area(exhaust_runner_radius),
            flip_display: true
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm,  5 * units.deg)
        .add_sample(1000 * units.rpm, 15 * units.deg)
        .add_sample(2000 * units.rpm, 22 * units.deg)
        .add_sample(3000 * units.rpm, 28 * units.deg)
        .add_sample(4000 * units.rpm, 34 * units.deg)
        .add_sample(5000 * units.rpm, 39 * units.deg)
        .add_sample(6000 * units.rpm, 42 * units.deg)
        .add_sample(7000 * units.rpm, 42 * units.deg)

    engine.add_ignition_module(
        volkswagen_vr6_distributor(
            wires: wires,
            timing_curve: timing_curve
        )
    )
}

// 1992 Volkswagen Corrado VR6
// http://web.archive.org/web/20081023195053/http://www.corrado-vr6.info/technical.htm
public node volkswagen_corrado_vr6_vehicle {
    alias output __out:
        vehicle(
            mass: 2733 * units.lb,
            drag_coefficient: 0.32,
            cross_sectional_area: 1.69 * 1.31 * 0.99 * (units.m * units.m), // estimate
            diff_ratio: 3.39,
            tire_radius: 293.5 * units.mm, // P205/50R15
            rolling_resistance: 410 * units.N
        );
}

public node volkswagen_corrado_vr6_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 500 * units.lb_ft
        )
        .add_gear(3.78)
        .add_gear(2.12)
        .add_gear(1.46)
        .add_gear(1.03)
        .add_gear(0.84);
}

public node main {
    set_engine(volkswagen_vr6_abv_engine())
    set_vehicle(volkswagen_corrado_vr6_vehicle())
    set_transmission(volkswagen_corrado_vr6_transmission())
}

main()