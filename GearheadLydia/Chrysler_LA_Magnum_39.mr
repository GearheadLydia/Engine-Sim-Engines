import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)

// firing order: 165432

public node dodge_magnum_v6_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 5200 * units.rpm;
	input limiter_duration: 0.11;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wire1, (0.0 / 6.0) * cycle)
            .connect_wire(wires.wire6, (1.0 / 6.0) * cycle)
            .connect_wire(wires.wire5, (2.0 / 6.0) * cycle)
            .connect_wire(wires.wire4, (3.0 / 6.0) * cycle)
            .connect_wire(wires.wire3, (4.0 / 6.0) * cycle)
            .connect_wire(wires.wire2, (5.0 / 6.0) * cycle);
}

private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
    output wire5: ignition_wire();
    output wire6: ignition_wire();
}

// https://www.ramforumz.com/attachments/mopar-cam-specs-jpg.9927/
public node dodge_magnum_v6_lobe_profile_int {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 251 * units.deg, // 251 adv
            gamma: 1.0,
            lift: 0.432 * units.inch,
            steps: 100
        );
}

public node dodge_magnum_v6_lobe_profile_exh {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 264 * units.deg, // 264 adv
            gamma: 1.0,
            lift: 0.432 * units.inch,
            steps: 100
        );
}

public node dodge_magnum_v6_camshaft_builder {
    input in_lobe_profile: dodge_magnum_v6_lobe_profile_int();
    input ex_lobe_profile: dodge_magnum_v6_lobe_profile_exh();
    input intake_lobe_profile: in_lobe_profile;
    input exhaust_lobe_profile: ex_lobe_profile;
    input lobe_separation: 113.25 * units.deg;
    input intake_lobe_center: lobe_separation;
    input exhaust_lobe_center: lobe_separation;
    input advance: -2.25 * units.deg;
    input base_radius: 0.75 * units.inch;

    output intake_cam_0: _intake_cam_0;
    output intake_cam_1: _intake_cam_1;
    output exhaust_cam_0: _exhaust_cam_0;
    output exhaust_cam_1: _exhaust_cam_1;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam_0(params, lobe_profile: intake_lobe_profile)
    camshaft _intake_cam_1(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_0(params, lobe_profile: exhaust_lobe_profile)
    camshaft _exhaust_cam_1(params, lobe_profile: exhaust_lobe_profile)

	label rot30(30 * units.deg)
	label rot54(54 * units.deg)
	label rot60(60 * units.deg)
	label rot72(72 * units.deg)
    label rot90(90 * units.deg)
	label rot120(120 * units.deg)
    label rot360(360 * units.deg)
	
    _intake_cam_0
        .add_lobe(rot360 + intake_lobe_center + 0 * rot120)
        .add_lobe(rot360 + intake_lobe_center + 4 * rot120)
        .add_lobe(rot360 + intake_lobe_center + 2 * rot120)

    _exhaust_cam_0
        .add_lobe(rot360 - exhaust_lobe_center + 0 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center + 4 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center + 2 * rot120)

    _intake_cam_1
        .add_lobe(rot360 + intake_lobe_center + 5 * rot120)
        .add_lobe(rot360 + intake_lobe_center + 3 * rot120)
        .add_lobe(rot360 + intake_lobe_center + 1 * rot120)

    _exhaust_cam_1
        .add_lobe(rot360 - exhaust_lobe_center + 5 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center + 3 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center + 1 * rot120)
}

public node dodge_magnum_v6_head {
    input intake_camshaft;
    input exhaust_camshaft;
    input chamber_volume: 62.0 * units.cc;
    input flip_display: false;
	
	input flow_attenuation_in: 1.0;
	input flow_attenuation_ex: 1.0;
    input lift_scale: 50.0;
    alias output __out: head;

    function intake_flow(50 * units.thou)
    intake_flow
        .add_flow_sample( 0 * lift_scale,   0 * flow_attenuation_in)
        .add_flow_sample( 1 * lift_scale,  25 * flow_attenuation_in)
        .add_flow_sample( 2 * lift_scale,  76 * flow_attenuation_in)
        .add_flow_sample( 3 * lift_scale, 100 * flow_attenuation_in)
        .add_flow_sample( 4 * lift_scale, 146 * flow_attenuation_in)
        .add_flow_sample( 5 * lift_scale, 175 * flow_attenuation_in)
        .add_flow_sample( 6 * lift_scale, 212 * flow_attenuation_in)
        .add_flow_sample( 7 * lift_scale, 230 * flow_attenuation_in)
        .add_flow_sample( 8 * lift_scale, 255 * flow_attenuation_in)
        .add_flow_sample( 9 * lift_scale, 275 * flow_attenuation_in)
        .add_flow_sample(10 * lift_scale, 294 * flow_attenuation_in)
        .add_flow_sample(11 * lift_scale, 300 * flow_attenuation_in)
        .add_flow_sample(12 * lift_scale, 314 * flow_attenuation_in)
        .add_flow_sample(13 * lift_scale, 314 * flow_attenuation_in)
        .add_flow_sample(14 * lift_scale, 314 * flow_attenuation_in)

    function exhaust_flow(50 * units.thou)
    exhaust_flow
        .add_flow_sample( 0 * lift_scale,   0 * flow_attenuation_ex)
        .add_flow_sample( 1 * lift_scale,  25 * flow_attenuation_ex)
        .add_flow_sample( 2 * lift_scale,  70 * flow_attenuation_ex)
        .add_flow_sample( 3 * lift_scale, 100 * flow_attenuation_ex)
        .add_flow_sample( 4 * lift_scale, 132 * flow_attenuation_ex)
        .add_flow_sample( 5 * lift_scale, 140 * flow_attenuation_ex)
        .add_flow_sample( 6 * lift_scale, 156 * flow_attenuation_ex)
        .add_flow_sample( 7 * lift_scale, 170 * flow_attenuation_ex)
        .add_flow_sample( 8 * lift_scale, 181 * flow_attenuation_ex)
        .add_flow_sample( 9 * lift_scale, 191 * flow_attenuation_ex)
        .add_flow_sample(10 * lift_scale, 207 * flow_attenuation_ex)
        .add_flow_sample(11 * lift_scale, 214 * flow_attenuation_ex)
        .add_flow_sample(12 * lift_scale, 228 * flow_attenuation_ex)
        .add_flow_sample(13 * lift_scale, 228 * flow_attenuation_ex)
        .add_flow_sample(14 * lift_scale, 228 * flow_attenuation_ex)
		
    cylinder_head head(
        chamber_volume: chamber_volume,
        intake_runner_volume: circle_area(0.9 * units.inch) * 2 * units.inch,
        intake_runner_cross_section_area: circle_area(0.9 * units.inch),
        exhaust_runner_volume: circle_area(0.9 * units.inch) * 2 * units.inch,
        exhaust_runner_cross_section_area: circle_area(0.9 * units.inch),

        intake_port_flow: intake_flow,
        exhaust_port_flow: exhaust_flow,
        intake_camshaft: intake_camshaft,
        exhaust_camshaft: exhaust_camshaft,
        flip_display: flip_display
    )
}

public node dodge_magnum_v6_39_engine {
    alias output __out: engine;

    wires wires()

    engine engine(
        name: "Dodge Magnum V6",
        starter_torque: 150 * units.lb_ft,
		starter_speed: 900 * units.rpm,
        redline: 5000 * units.rpm,
        throttle_gamma: 1.0
    )


	// source: https://www.488magnum.com/post/8-0l-v10-vs-5-9l-v8-pistons-and-connecting-rods
    label bore(3.910 * units.inch)
	label bore_spacing(4.460 * units.inch)
    label stroke(3.310 * units.inch)
    label rod_length(6.123 * units.inch)
    label rod_mass(785 * units.g)
    label compression_height(1.802 * units.inch) // nominally 1.810", but 5.2 V8 pistons repeatedly cited as being 40 thou in the hole
	label piston_mass(435 * units.g)
	label piston_dome(-2.4 * units.cc)
	label deck_height((9.580 * units.inch) + (39 * units.thou))
    label crank_mass(50 * units.lb)
    label flywheel_mass(50 * units.lb)
    label flywheel_radius(6 * units.inch)

    label crank_moment(
        disk_moment_of_inertia(mass: crank_mass, radius: stroke / 2)
    )
    label flywheel_moment(
        disk_moment_of_inertia(mass: flywheel_mass, radius: flywheel_radius)
    )
    label other_moment( // Moment from cams, pulleys, etc [estimated]
        disk_moment_of_inertia(mass: 20 * units.kg, radius: 8.0 * units.cm)
    )

    crankshaft c0(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 5.0 * units.lb_ft,
        moment_of_inertia:
            crank_moment + flywheel_moment + other_moment,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 45.0 * units.deg // 45 degrees back from right side
    )

    rod_journal rj0(angle:  0  * units.deg)
    rod_journal rj1(angle: -30 * units.deg)
    rod_journal rj2(angle: 120 * units.deg)
    rod_journal rj3(angle:  90 * units.deg)
    rod_journal rj4(angle: 240 * units.deg)
    rod_journal rj5(angle: 210 * units.deg)

    c0
        .add_rod_journal(rj0)
        .add_rod_journal(rj1)
        .add_rod_journal(rj2)
        .add_rod_journal(rj3)
        .add_rod_journal(rj4)
        .add_rod_journal(rj5)

    piston_parameters piston_params(
        mass: piston_mass,
        //blowby: 0,
        compression_height: compression_height,
        wrist_pin_position: 0 * units.mm,
        displacement: piston_dome
    )

    connecting_rod_parameters cr_params(
        mass: rod_mass,
        moment_of_inertia: rod_moment_of_inertia(
            mass: rod_mass,
            length: rod_length
        ),
        center_of_mass: 0.0,
        length: rod_length
    )

    cylinder_bank_parameters bank_params(
        bore: bore,
        deck_height: deck_height
    )

    intake intake(
        plenum_volume: 2.0 * units.L,
        plenum_cross_section_area: 100.0 * units.cm2,
        intake_flow_rate: k_carb(240.0),
        idle_flow_rate: k_carb(0.001),
        idle_throttle_plate_position: 0.994,
        throttle_gamma: 1.0,
        runner_flow_rate: k_carb(170.0),
        runner_length: 6.0 * units.inch,
        velocity_decay: 0.1
    )

	label exhaust_radius((3.0 * units.inch)/2)

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(240.0),
        primary_tube_length: 5.0 * units.inch,
        primary_flow_rate: k_carb(170.0),
        velocity_decay: 1.0, //0.5
		collector_cross_section_area: circle_area(exhaust_radius) * 2,
		length: 2900 * units.mm,
		volume: (2400 * units.mm * circle_area(exhaust_radius)) + (500 * units.mm * circle_area(exhaust_radius) * 2)
    )

    exhaust_system exhaust(es_params, audio_volume: 1.0 * 0.05, impulse_response: ir_lib.default_0)
	
	label pipe_length_1(2.0 * bore_spacing)
	label pipe_length_2(1.0 * bore_spacing)
	label pipe_length_3(0.0 * bore_spacing)
	
	label exhaust_stagger(0.3 * bore_spacing)

    cylinder_bank b0(bank_params, angle: -45 * units.deg) // R (first)
    b0
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj0,
            ignition_wire: wires.wire1,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_1 + exhaust_stagger
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            ignition_wire: wires.wire3,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_2 + exhaust_stagger
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            ignition_wire: wires.wire5,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_3 + exhaust_stagger
        )

    cylinder_bank b1(bank_params, angle: 45.0 * units.deg) // L (second)
    b1
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            ignition_wire: wires.wire2,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_1
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            ignition_wire: wires.wire4,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_2
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj5,
            ignition_wire: wires.wire6,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_3
        )

    engine
        .add_cylinder_bank(b0)
        .add_cylinder_bank(b1)

    engine.add_crankshaft(c0)

    dodge_magnum_v6_camshaft_builder camshaft(
		in_lobe_profile: dodge_magnum_v6_lobe_profile_int(),
		ex_lobe_profile: dodge_magnum_v6_lobe_profile_exh()
	)

    b0.set_cylinder_head (
        dodge_magnum_v6_head(
            intake_camshaft: camshaft.intake_cam_0,
            exhaust_camshaft: camshaft.exhaust_cam_0,
            flip_display: false
        )
    )
    b1.set_cylinder_head (
        dodge_magnum_v6_head(
            intake_camshaft: camshaft.intake_cam_1,
            exhaust_camshaft: camshaft.exhaust_cam_1,
            flip_display: true
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, 65 * units.deg)
        .add_sample(1000 * units.rpm, 75 * units.deg)
        .add_sample(2000 * units.rpm, 75 * units.deg)
        .add_sample(3000 * units.rpm, 75 * units.deg)
        .add_sample(4000 * units.rpm, 75 * units.deg)
        .add_sample(5000 * units.rpm, 75 * units.deg)
        .add_sample(6000 * units.rpm, 75 * units.deg)

    engine.add_ignition_module(
        dodge_magnum_v6_distributor(
            wires: wires,
            timing_curve: timing_curve
        )
    )
}

// 1999 Dodge Dakota V6 Short Cab
public node dodge_dakota_v6_dn_vehicle {
    alias output __out:
        vehicle(
            mass: 3273 * units.lb,
            drag_coefficient: 0.48,
            cross_sectional_area: 2.79 * (units.m * units.m),
            diff_ratio: 3.92,
            tire_radius: 355.5 * units.mm, // P255/55R17
            rolling_resistance: 500 * units.N
        );
}

public node chrysler_46re_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 500 * units.lb_ft
        )
        .add_gear(2.45)
        .add_gear(1.45)
        .add_gear(1.00)
        .add_gear(0.69);
}

public node main {
    set_engine(dodge_magnum_v6_39_engine())
    set_vehicle(dodge_dakota_v6_dn_vehicle())
    set_transmission(chrysler_46re_transmission())
}

main()