import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)

public node tritec_t16b3_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 6950 * units.rpm;
    input limiter_duration: 0.06;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wire1, (0.0/4.0) * cycle)
            .connect_wire(wires.wire3, (1.0/4.0) * cycle)
            .connect_wire(wires.wire4, (2.0/4.0) * cycle)
            .connect_wire(wires.wire2, (3.0/4.0) * cycle);
}

private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
}

// https://www.northamericanmotoring.com/forums/cooper-non-s/187434-the-truth-about-camshaft-specs-read-this.html
public node tritec_t16b3_lobe_profile_int {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 212.36 * units.deg,
            gamma: 1.0,
            lift: 8.0 * units.mm,
            steps: 100
        );
}

public node tritec_t16b3_lobe_profile_exh {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 216.85 * units.deg,
            gamma: 1.0,
            lift: 8.5 * units.mm,
            steps: 100
        );
}

public node tritec_t16b3_camshaft_builder {
    input lobe_profile: tritec_t16b3_lobe_profile_int();
    input ex_lobe_profile: tritec_t16b3_lobe_profile_exh();
    input intake_lobe_profile: lobe_profile;
    input exhaust_lobe_profile: ex_lobe_profile;
    input intake_lobe_center: 120.7 * units.deg;
    input exhaust_lobe_center: 117.9 * units.deg;
    input advance: 0.0 * units.deg;
    input base_radius: 15.0 * units.mm;

    output intake_cam_0: _intake_cam_0;
    output exhaust_cam_0: _exhaust_cam_0;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam_0(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_0(params, lobe_profile: exhaust_lobe_profile)


    label rot60(60 * units.deg)
    label rot90(90 * units.deg)
    label rot120(120 * units.deg)
    label rot180(180 * units.deg)
    label rot360(360 * units.deg)

    _intake_cam_0
        .add_lobe(rot360 + intake_lobe_center + 0 * rot180)
        .add_lobe(rot360 + intake_lobe_center + 3 * rot180)
        .add_lobe(rot360 + intake_lobe_center + 1 * rot180)
        .add_lobe(rot360 + intake_lobe_center + 2 * rot180)

    _exhaust_cam_0
        .add_lobe(rot360 - exhaust_lobe_center + 0 * rot180)
        .add_lobe(rot360 - exhaust_lobe_center + 3 * rot180)
        .add_lobe(rot360 - exhaust_lobe_center + 1 * rot180)
        .add_lobe(rot360 - exhaust_lobe_center + 2 * rot180)
}

private node add_flow_sample {
    input lift;
    input flow;
    input this;
    alias output __out: this;

    this.add_sample(lift * units.thou, k_28inH2O(flow))
}

public node tritec_t16b3_head {
    input intake_camshaft;
    input exhaust_camshaft;
    input chamber_volume: 26.75 * units.cc;
    input flip_display: false;
    
    alias output __out: head;

    // http://www.users.interport.net/s/r/srweiss/tablehdc.htm#BMW
    function intake_flow(50 * units.thou)
    intake_flow
        .add_flow_sample(  0,   0)
        .add_flow_sample( 50,  34)
        .add_flow_sample(100,  70)
        .add_flow_sample(150, 107)
        .add_flow_sample(200, 140)
        .add_flow_sample(250, 166)
        .add_flow_sample(300, 180)
        .add_flow_sample(350, 181)
        .add_flow_sample(400, 186)
        .add_flow_sample(450, 188)
        .add_flow_sample(500, 188)

    function exhaust_flow(50 * units.thou)
    exhaust_flow
        .add_flow_sample(  0,   0)
        .add_flow_sample( 50,  26)
        .add_flow_sample(100,  56)
        .add_flow_sample(150,  79)
        .add_flow_sample(200,  98)
        .add_flow_sample(250, 105)
        .add_flow_sample(300, 108)
        .add_flow_sample(350, 108)
        .add_flow_sample(400, 108)
        .add_flow_sample(450, 108)
        .add_flow_sample(500, 109)

        
    cylinder_head head(
        chamber_volume: chamber_volume,
        intake_runner_volume: circle_area(0.95 * units.inch) * 3 * units.inch,
        intake_runner_cross_section_area: circle_area(0.95 * units.inch),
        exhaust_runner_volume: circle_area(0.60 * units.inch) * 4 * units.inch,
        exhaust_runner_cross_section_area: circle_area(0.60 * units.inch),

        intake_port_flow: intake_flow,
        exhaust_port_flow: exhaust_flow,
        intake_camshaft: intake_camshaft,
        exhaust_camshaft: exhaust_camshaft,
        flip_display: flip_display
    )
}

// https://www.northamericanmotoring.com/forums/drivetrain-cooper-s/127180-head-cc-gasket.html
public node tritec_t16b3 {
    alias output __out: engine;

    engine engine(
        name: "Tritec T16b3",
        starter_torque: 150 * units.lb_ft,
        starter_speed: 1200 * units.rpm,
        redline: 6500 * units.rpm,
        hf_gain: 0.005,
        jitter: 0.6,
        throttle_gamma: 1.0
    )
    
    label lean_angle(10 * units.deg)

    label bore(77.0 * units.mm)
    label stroke(85.8 * units.mm)
    label rod_length(131.5 * units.mm)
    label rod_mass(350 * units.g)
    label piston_mass(347 * units.g)
    label compression_height(35.0 * units.mm)
    label deck_height((213.0 + 0.6) * units.mm)
    label piston_dome(4.0 * units.cc) // R50 is about 4.0 (calculated); R53 is about -8.5 (calculated)
    label crank_mass(4.0 * units.kg)
    label flywheel_mass(5.0 * units.kg)
    label flywheel_radius(5.0 * units.inch)

    label crank_moment(
        disk_moment_of_inertia(mass: crank_mass, radius: stroke / 2)
    )
    label flywheel_moment(
        disk_moment_of_inertia(mass: flywheel_mass, radius: flywheel_radius)
    )
    label other_moment( // Moment from cams, pulleys, etc [estimated]
        disk_moment_of_inertia(mass: 15 * units.kg, radius: 8.0 * units.cm)
    )

    wires wires()

    crankshaft c0(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 5.0 * units.lb_ft,
        moment_of_inertia: crank_moment + flywheel_moment + other_moment,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 90.0 * units.deg + lean_angle
    )

    rod_journal rj1(angle:  0  * units.deg)
    rod_journal rj2(angle: 180 * units.deg)
    rod_journal rj3(angle: 180 * units.deg)
    rod_journal rj4(angle:  0  * units.deg)
    
    c0
        .add_rod_journal(rj1)
        .add_rod_journal(rj2)
        .add_rod_journal(rj3)
        .add_rod_journal(rj4)

    piston_parameters piston_params(
        mass: piston_mass,
        blowby: k_28inH2O(0.1),
        compression_height: compression_height,
        wrist_pin_position: 0.0,
        displacement: piston_dome
    )

    connecting_rod_parameters cr_params(
        mass: rod_mass,
        moment_of_inertia: rod_moment_of_inertia(
            mass: rod_mass,
            length: rod_length
        ),
        center_of_mass: 0.0,
        length: rod_length
    )

    cylinder_bank_parameters bank_params(
        bore: bore,
        deck_height: deck_height
    )

    intake intake(
        plenum_volume: 1.0 * units.L,
        plenum_cross_section_area: 50.0 * units.cm2,
        intake_flow_rate: k_carb(300.0),
        idle_flow_rate: k_carb(0.001),
        idle_throttle_plate_position: 0.996,
        throttle_gamma: 1.0,
        runner_flow_rate: k_carb(200.0),
        runner_length: 7.0 * units.inch,
        velocity_decay: 0.1
    )
    
    label exhaust_radius((2.5 * units.inch)/2)

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(220.0),
        primary_tube_length: 6.0 * units.inch,
        primary_flow_rate: k_carb(200.0),
        velocity_decay: 1.0, //0.5
        collector_cross_section_area: circle_area(exhaust_radius),
        length: 1800 * units.mm,
        volume: 1800 * units.mm * circle_area(exhaust_radius)
    )
    
    exhaust_system exhaust(
        es_params,
        audio_volume: 1.0 * 0.05,
        impulse_response: ir_lib.default_0
    )
 
    cylinder_bank b0(bank_params, angle: 0 * units.deg + lean_angle)
    b0
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            ignition_wire: wires.wire1,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: 0.6 * units.inch,
            sound_attenuation: 1.0
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            ignition_wire: wires.wire2,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: 0.0 * units.inch,
            sound_attenuation: 1.0
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            ignition_wire: wires.wire3,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: 0.2 * units.inch,
            sound_attenuation: 1.0
        )
        .add_cylinder(
            piston: piston(piston_params),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            ignition_wire: wires.wire4,
            intake: intake,
            exhaust_system: exhaust,
            primary_length: 0.8 * units.inch,
            sound_attenuation: 1.0
        )

    engine
        .add_cylinder_bank(b0)

    engine.add_crankshaft(c0)

    tritec_t16b3_camshaft_builder camshaft(
        lobe_profile: tritec_t16b3_lobe_profile_int(),
        ex_lobe_profile: tritec_t16b3_lobe_profile_exh()
    )

    b0.set_cylinder_head (
        tritec_t16b3_head(
            intake_camshaft: camshaft.intake_cam_0,
            exhaust_camshaft: camshaft.exhaust_cam_0,
            flip_display: true
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, 30 * units.deg)
        .add_sample(1000 * units.rpm, 40 * units.deg)
        .add_sample(2000 * units.rpm, 40 * units.deg)
        .add_sample(3000 * units.rpm, 40 * units.deg)
        .add_sample(4000 * units.rpm, 40 * units.deg)
        .add_sample(5000 * units.rpm, 40 * units.deg)
        .add_sample(6000 * units.rpm, 40 * units.deg)
        .add_sample(7000 * units.rpm, 40 * units.deg)

    engine.add_ignition_module(
        tritec_t16b3_distributor(
            wires: wires,
            timing_curve: timing_curve
        ))
}

// 2002 (BMW) Mini Cooper (R50)
public node mini_cooper_r50_vehicle {
    alias output __out:
        vehicle(
            mass: 2315 * units.lb,
            drag_coefficient: 0.35,
            cross_sectional_area: 1.97 * (units.m * units.m),
            diff_ratio: 3.94,
            tire_radius: 305 * units.mm, // 175/65R15H
            rolling_resistance: 400 * units.N
        );
}

// for Cooper
public node bmw_gs5_65bh_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 300 * units.lb_ft
        )
        .add_gear(3.417)
        .add_gear(1.947)
        .add_gear(1.333)
        .add_gear(1.051)
        .add_gear(0.848);
}

// for Cooper S
public node bmw_gs6_85bg_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 300 * units.lb_ft
        )
        .add_gear(4.167)
        .add_gear(2.619)
        .add_gear(1.968)
        .add_gear(1.606)
        .add_gear(1.333)
        .add_gear(1.089);
}

public node main {
    set_engine(tritec_t16b3())
    set_vehicle(mini_cooper_r50_vehicle())
    set_transmission(bmw_gs5_65bh_transmission())
}

main()