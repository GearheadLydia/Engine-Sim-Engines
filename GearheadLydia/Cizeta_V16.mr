import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)

// thanks to oror on the Engine Sim Discord server for a lot of photographs and info
// has two counter-rotating half-engines, the right half of which I have mirrored
// because Engine Sim can't do two engines spinning at different speeds at once

// firing order is based on camshafts

// firing order: L1-R1-L3-R3-L4-R4-L2-R2-L6-R6-L5-R5-L7-R7-L8-R8

public node cizeta_v16_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 8550 * units.rpm;
	input limiter_duration: 0.10;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wireL1, ( 0.0 / 16.0) * cycle)
            .connect_wire(wires.wireR1, ( 1.0 / 16.0) * cycle)
            .connect_wire(wires.wireL3, ( 2.0 / 16.0) * cycle)
            .connect_wire(wires.wireR3, ( 3.0 / 16.0) * cycle)
            .connect_wire(wires.wireL4, ( 4.0 / 16.0) * cycle)
            .connect_wire(wires.wireR4, ( 5.0 / 16.0) * cycle)
            .connect_wire(wires.wireL2, ( 6.0 / 16.0) * cycle)
            .connect_wire(wires.wireR2, ( 7.0 / 16.0) * cycle)
            .connect_wire(wires.wireL6, ( 8.0 / 16.0) * cycle)
            .connect_wire(wires.wireR6, ( 9.0 / 16.0) * cycle)
            .connect_wire(wires.wireL5, (10.0 / 16.0) * cycle)
            .connect_wire(wires.wireR5, (11.0 / 16.0) * cycle)
            .connect_wire(wires.wireL7, (12.0 / 16.0) * cycle)
            .connect_wire(wires.wireR7, (13.0 / 16.0) * cycle)
            .connect_wire(wires.wireL8, (14.0 / 16.0) * cycle)
            .connect_wire(wires.wireR8, (15.0 / 16.0) * cycle);
}

private node wires {
    output wireL1: ignition_wire();
    output wireL2: ignition_wire();
    output wireL3: ignition_wire();
    output wireL4: ignition_wire();
    output wireL5: ignition_wire();
    output wireL6: ignition_wire();
    output wireL7: ignition_wire();
    output wireL8: ignition_wire();
    output wireR1: ignition_wire();
    output wireR2: ignition_wire();
    output wireR3: ignition_wire();
    output wireR4: ignition_wire();
    output wireR5: ignition_wire();
    output wireR6: ignition_wire();
    output wireR7: ignition_wire();
    output wireR8: ignition_wire();
}

public node cizeta_v16_lobe_profile_int {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 245 * units.deg,
            gamma: 1.5,
            lift: 11.0 * units.mm,
            steps: 100
        );
}

public node cizeta_v16_lobe_profile_exh {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 240 * units.deg,
            gamma: 1.5,
            lift: 10.0 * units.mm,
            steps: 100
        );
}

public node cizeta_v16_camshaft_builder {
    input in_lobe_profile: cizeta_v16_lobe_profile_int();
	input ex_lobe_profile: cizeta_v16_lobe_profile_exh();
    input intake_lobe_profile: in_lobe_profile;
    input exhaust_lobe_profile: ex_lobe_profile;
    input intake_lobe_center: 110.0 * units.deg;
    input exhaust_lobe_center: 105.0 * units.deg;
    input advance: 0.0 * units.deg;
    input base_radius: 15 * units.mm;

    output intake_cam_LF: _intake_cam_LF;
    output intake_cam_LR: _intake_cam_LR;
    output intake_cam_RF: _intake_cam_RF;
    output intake_cam_RR: _intake_cam_RR;
    output exhaust_cam_LF: _exhaust_cam_LF;
    output exhaust_cam_LR: _exhaust_cam_LR;
    output exhaust_cam_RF: _exhaust_cam_RF;
    output exhaust_cam_RR: _exhaust_cam_RR;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam_LF(params, lobe_profile: intake_lobe_profile)
    camshaft _intake_cam_LR(params, lobe_profile: intake_lobe_profile)
    camshaft _intake_cam_RF(params, lobe_profile: intake_lobe_profile)
    camshaft _intake_cam_RR(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_LF(params, lobe_profile: exhaust_lobe_profile)
    camshaft _exhaust_cam_LR(params, lobe_profile: exhaust_lobe_profile)
    camshaft _exhaust_cam_RF(params, lobe_profile: exhaust_lobe_profile)
    camshaft _exhaust_cam_RR(params, lobe_profile: exhaust_lobe_profile)


    label rot30(30 * units.deg)
    label rot45(45 * units.deg)
	label rot60(60 * units.deg)
    label rot90(90 * units.deg)
    label rot120(120 * units.deg)
    label rot180(180 * units.deg)
    label rot360(360 * units.deg)

	// firing order: L1-R1-L3-R3-L4-R4-L2-R2-L6-R6-L5-R5-L7-R7-L8-R8

    _intake_cam_LF
        .add_lobe(rot360 + intake_lobe_center +  0 * rot45) // #L1
        .add_lobe(rot360 + intake_lobe_center +  6 * rot45) // #L2
        .add_lobe(rot360 + intake_lobe_center +  2 * rot45) // #L3
        .add_lobe(rot360 + intake_lobe_center +  4 * rot45) // #L4

    _intake_cam_LR
        .add_lobe(rot360 + intake_lobe_center + 10 * rot45) // #L5
        .add_lobe(rot360 + intake_lobe_center +  8 * rot45) // #L6
        .add_lobe(rot360 + intake_lobe_center + 12 * rot45) // #L7
        .add_lobe(rot360 + intake_lobe_center + 14 * rot45) // #L8
		
	_intake_cam_RR
        .add_lobe(rot360 + intake_lobe_center +  1 * rot45) // #R1
        .add_lobe(rot360 + intake_lobe_center +  7 * rot45) // #R2
        .add_lobe(rot360 + intake_lobe_center +  3 * rot45) // #R3
        .add_lobe(rot360 + intake_lobe_center +  5 * rot45) // #R4
	
	_intake_cam_RF
        .add_lobe(rot360 + intake_lobe_center + 11 * rot45) // #R5
        .add_lobe(rot360 + intake_lobe_center +  9 * rot45) // #R6
        .add_lobe(rot360 + intake_lobe_center + 13 * rot45) // #R7
        .add_lobe(rot360 + intake_lobe_center + 15 * rot45) // #R8

    _exhaust_cam_LF
        .add_lobe(rot360 - exhaust_lobe_center +  0 * rot45) // #L1
        .add_lobe(rot360 - exhaust_lobe_center +  6 * rot45) // #L2
        .add_lobe(rot360 - exhaust_lobe_center +  2 * rot45) // #L3
        .add_lobe(rot360 - exhaust_lobe_center +  4 * rot45) // #L4

    _exhaust_cam_LR
        .add_lobe(rot360 - exhaust_lobe_center + 10 * rot45) // #L5
        .add_lobe(rot360 - exhaust_lobe_center +  8 * rot45) // #L6
        .add_lobe(rot360 - exhaust_lobe_center + 12 * rot45) // #L7
        .add_lobe(rot360 - exhaust_lobe_center + 14 * rot45) // #L8
		
	_exhaust_cam_RR
        .add_lobe(rot360 - exhaust_lobe_center +  1 * rot45) // #R1
        .add_lobe(rot360 - exhaust_lobe_center +  7 * rot45) // #R2
        .add_lobe(rot360 - exhaust_lobe_center +  3 * rot45) // #R3
        .add_lobe(rot360 - exhaust_lobe_center +  5 * rot45) // #R4
	
	_exhaust_cam_RF
        .add_lobe(rot360 - exhaust_lobe_center + 11 * rot45) // #R5
        .add_lobe(rot360 - exhaust_lobe_center +  9 * rot45) // #R6
        .add_lobe(rot360 - exhaust_lobe_center + 13 * rot45) // #R7
        .add_lobe(rot360 - exhaust_lobe_center + 15 * rot45) // #R8
}

private node add_flow_sample {
    input lift;
    input flow;
    input this;
    alias output __out: this;

    this.add_sample(lift * units.thou, k_28inH2O(flow))
}

public node cizeta_v16_head {
    input intake_camshaft;
    input exhaust_camshaft;
    input chamber_volume: 51.0 * units.cc; // guess
    input flip_display: false;
	
	input flow_attenuation_in: 1.0;
	input flow_attenuation_ex: 1.0;
    input lift_scale: 50.0;
    alias output __out: head;

    function intake_flow(1.00 * units.mm)
    intake_flow
        .add_flow_sample( 0 * lift_scale,   0 * flow_attenuation_in)
        .add_flow_sample( 1 * lift_scale,  30 * flow_attenuation_in)
        .add_flow_sample( 2 * lift_scale,  60 * flow_attenuation_in)
        .add_flow_sample( 3 * lift_scale,  90 * flow_attenuation_in)
        .add_flow_sample( 4 * lift_scale, 125 * flow_attenuation_in)
        .add_flow_sample( 5 * lift_scale, 160 * flow_attenuation_in)
        .add_flow_sample( 6 * lift_scale, 195 * flow_attenuation_in)
        .add_flow_sample( 7 * lift_scale, 210 * flow_attenuation_in)
        .add_flow_sample( 8 * lift_scale, 235 * flow_attenuation_in)
        .add_flow_sample( 9 * lift_scale, 270 * flow_attenuation_in)
        .add_flow_sample(10 * lift_scale, 305 * flow_attenuation_in)
        .add_flow_sample(11 * lift_scale, 320 * flow_attenuation_in)
        .add_flow_sample(12 * lift_scale, 335 * flow_attenuation_in)
        .add_flow_sample(13 * lift_scale, 335 * flow_attenuation_in)
        .add_flow_sample(14 * lift_scale, 335 * flow_attenuation_in)

    function exhaust_flow(1.00 * units.mm)
    exhaust_flow
        .add_flow_sample( 0 * lift_scale,   0 * flow_attenuation_ex)
        .add_flow_sample( 1 * lift_scale,  30 * flow_attenuation_ex)
        .add_flow_sample( 2 * lift_scale,  55 * flow_attenuation_ex)
        .add_flow_sample( 3 * lift_scale,  85 * flow_attenuation_ex)
        .add_flow_sample( 4 * lift_scale, 115 * flow_attenuation_ex)
        .add_flow_sample( 5 * lift_scale, 140 * flow_attenuation_ex)
        .add_flow_sample( 6 * lift_scale, 160 * flow_attenuation_ex)
        .add_flow_sample( 7 * lift_scale, 180 * flow_attenuation_ex)
        .add_flow_sample( 8 * lift_scale, 205 * flow_attenuation_ex)
        .add_flow_sample( 9 * lift_scale, 220 * flow_attenuation_ex)
        .add_flow_sample(10 * lift_scale, 240 * flow_attenuation_ex)
        .add_flow_sample(11 * lift_scale, 260 * flow_attenuation_ex)
        .add_flow_sample(12 * lift_scale, 280 * flow_attenuation_ex)
        .add_flow_sample(13 * lift_scale, 280 * flow_attenuation_ex)
        .add_flow_sample(14 * lift_scale, 280 * flow_attenuation_ex)

    cylinder_head head(
        chamber_volume: chamber_volume,
        intake_runner_volume: circle_area(1.05 * units.inch) * 4 * units.inch,
        intake_runner_cross_section_area: circle_area(1.05 * units.inch),
        exhaust_runner_volume: circle_area(0.7 * units.inch) * 4 * units.inch,
        exhaust_runner_cross_section_area: circle_area(0.7 * units.inch),

        intake_port_flow: intake_flow,
        exhaust_port_flow: exhaust_flow,
        intake_camshaft: intake_camshaft,
        exhaust_camshaft: exhaust_camshaft,
        flip_display: flip_display
    )
}

public node cizeta_v16 {
    alias output __out: engine;

    wires wires()

    engine engine(
        name: "Cizeta V16",
        starter_torque: 400 * units.lb_ft,
		starter_speed: 800 * units.rpm,
        redline: 8500 * units.rpm,
        throttle_gamma: 1.0,
		simulation_frequency: 4000
    )

	// most dimensions made up
    label bore(86.0 * units.mm)
    label stroke(64.5 * units.mm)
    label rod_length(115.0 * units.mm)
    label rod_mass(621.5 * units.g)
	label piston_mass(400 * units.g)
    label compression_height(25.00 * units.mm)
	label piston_dome(0.00 * units.cc)
	label deck_clearance(0.5 * units.mm)
    label crank_mass(41 * units.lb)
    label flywheel_mass(25 * units.lb)
    label flywheel_radius(6 * units.inch)

    label crank_moment(
        disk_moment_of_inertia(mass: crank_mass, radius: stroke / 2)
    )
    label flywheel_moment(
        disk_moment_of_inertia(mass: flywheel_mass, radius: flywheel_radius)
    )
    label other_moment( // Moment from cams, pulleys, etc [estimated]
        disk_moment_of_inertia(mass: 20 * units.kg, radius: 8.0 * units.cm)
    )

	// for display purposes - unfold the stacked engine into two V8s
	label engine_distance(0)

    crankshaft cL(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 5.0 * units.lb_ft,
        moment_of_inertia:
            crank_moment + flywheel_moment + other_moment,
        position_x: -engine_distance,
        position_y: 0.0,
        tdc: 135.0 * units.deg // +45 degrees
    )

    crankshaft cR(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 5.0 * units.lb_ft,
        moment_of_inertia:
            crank_moment + flywheel_moment + other_moment,
        position_x: engine_distance,
        position_y: 0.0,
        tdc: 135.0 * units.deg // +45 degrees
    )

	// https://gtspeed.us/wp-content/uploads/2016/02/cizeta_v16-640x359.jpg
	
	// left side bank, outside-in
    rod_journal rjL1(angle:   0.0 * units.deg)
    rod_journal rjL2(angle: -90.0 * units.deg)
    rod_journal rjL3(angle:  90.0 * units.deg)
    rod_journal rjL4(angle: 180.0 * units.deg)

	// right side bank, outside-in, numbered correctly but to be reversed
    rod_journal rjR1(angle:  45.0 * units.deg)
    rod_journal rjR2(angle: -45.0 * units.deg)
    rod_journal rjR3(angle: 135.0 * units.deg)
    rod_journal rjR4(angle: 225.0 * units.deg)

    cL
        .add_rod_journal(rjL1)
        .add_rod_journal(rjL2)
        .add_rod_journal(rjL3)
        .add_rod_journal(rjL4)
		
	cR
        .add_rod_journal(rjR1)
        .add_rod_journal(rjR2)
        .add_rod_journal(rjR3)
        .add_rod_journal(rjR4)

	// piston specs are guesses
    piston_parameters piston_params(
        mass: piston_mass,
        //blowby: 0,
        compression_height: compression_height,
        wrist_pin_position: 0 * units.mm,
        displacement: piston_dome
    )

    connecting_rod_parameters cr_params(
        mass: rod_mass,
        moment_of_inertia: rod_moment_of_inertia(
            mass: rod_mass,
            length: rod_length
        ),
        center_of_mass: 0.0,
        length: rod_length
    )

    cylinder_bank_parameters bank_params(
        bore: bore,
        deck_height: stroke / 2 + rod_length + compression_height + deck_clearance
    )

    intake intakeL(
        plenum_volume: 2.0 * units.L,
        plenum_cross_section_area: 100.0 * units.cm2,
        intake_flow_rate: k_carb(400),
        idle_flow_rate: k_carb(0.001),
        idle_throttle_plate_position: 0.996,
        throttle_gamma: 2.0,
        runner_flow_rate: k_carb(650.0),
        runner_length: 4.5 * units.inch,
        velocity_decay: 0.1
    )

    intake intakeR(
        plenum_volume: 2.0 * units.L,
        plenum_cross_section_area: 100.0 * units.cm2,
        intake_flow_rate: k_carb(400),
        idle_flow_rate: k_carb(0.001),
        idle_throttle_plate_position: 0.996,
        throttle_gamma: 2.0,
        runner_flow_rate: k_carb(650.0),
        runner_length: 4.5 * units.inch,
        velocity_decay: 0.1
    )
	
	label exhaust_radius((3.0 * units.inch)/2)

    exhaust_system_parameters es_params_long(
        outlet_flow_rate: k_carb(300.0),
        primary_tube_length: 20.0 * units.inch,
        primary_flow_rate: k_carb(400.0),
        velocity_decay: 1.0, //0.5
		collector_cross_section_area: circle_area(exhaust_radius),
		length: 700 * units.mm,
		volume: 700 * units.mm * circle_area(exhaust_radius)
    )

    exhaust_system_parameters es_params_shrt(
        outlet_flow_rate: k_carb(300.0),
        primary_tube_length: 10.0 * units.inch,
        primary_flow_rate: k_carb(400.0),
        velocity_decay: 1.0, //0.5
		collector_cross_section_area: circle_area(exhaust_radius),
		length: 700 * units.mm,
		volume: 700 * units.mm * circle_area(exhaust_radius)
    )

    exhaust_system exhaustFL(es_params_long, audio_volume: 1.0 * 0.01, impulse_response: ir_lib.default_0)
	exhaust_system exhaustRL(es_params_shrt, audio_volume: 1.0 * 0.01, impulse_response: ir_lib.default_0)
    exhaust_system exhaustFR(es_params_long, audio_volume: 1.0 * 0.01, impulse_response: ir_lib.default_0)
	exhaust_system exhaustRR(es_params_shrt, audio_volume: 1.0 * 0.01, impulse_response: ir_lib.default_0)
	
	label pipe_length_1(300 * units.mm)
	label pipe_length_2(150 * units.mm)
	label pipe_length_3(0 * units.mm)
	label pipe_length_4(100 * units.mm)
	
	label exhaust_stagger_FR(00 * units.mm) // handled by exhaust params for now
	label exhaust_stagger_LR(25 * units.mm)

    cylinder_bank bLF(bank_params, angle: 45.0 * units.deg, position_x: -engine_distance) // Front side of vehicle from left side of engine
    bLF
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjL1,
            ignition_wire: wires.wireL1,
            intake: intakeL,
            exhaust_system: exhaustFL,
			primary_length: pipe_length_1
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjL2,
            ignition_wire: wires.wireL2,
            intake: intakeL,
            exhaust_system: exhaustFL,
			primary_length: pipe_length_2
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjL3,
            ignition_wire: wires.wireL3,
            intake: intakeL,
            exhaust_system: exhaustFL,
			primary_length: pipe_length_3
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjL4,
            ignition_wire: wires.wireL4,
            intake: intakeL,
            exhaust_system: exhaustFL,
			primary_length: pipe_length_4
        )

    cylinder_bank bLR(bank_params, angle: -45.0 * units.deg, position_x: -engine_distance) // Rear side of vehicle from left side of engine
    bLR
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjL1,
            ignition_wire: wires.wireL5,
            intake: intakeL,
            exhaust_system: exhaustRL,
			primary_length: pipe_length_1 + exhaust_stagger_FR
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjL2,
            ignition_wire: wires.wireL6,
            intake: intakeL,
            exhaust_system: exhaustRL,
			primary_length: pipe_length_2 + exhaust_stagger_FR
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjL3,
            ignition_wire: wires.wireL7,
            intake: intakeL,
            exhaust_system: exhaustRL,
			primary_length: pipe_length_3 + exhaust_stagger_FR
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjL4,
            ignition_wire: wires.wireL8,
            intake: intakeL,
            exhaust_system: exhaustRL,
			primary_length: pipe_length_4 + exhaust_stagger_FR
        )
		
    cylinder_bank bRR(bank_params, angle: 45.0 * units.deg, position_x: engine_distance) // Rear side of vehicle from right side of engine
    bRR
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjR1,
            ignition_wire: wires.wireR1,
            intake: intakeR,
            exhaust_system: exhaustRR,
			primary_length: pipe_length_4 + exhaust_stagger_LR
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjR2,
            ignition_wire: wires.wireR2,
            intake: intakeR,
            exhaust_system: exhaustRR,
			primary_length: pipe_length_3 + exhaust_stagger_LR
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjR3,
            ignition_wire: wires.wireR3,
            intake: intakeR,
            exhaust_system: exhaustRR,
			primary_length: pipe_length_2 + exhaust_stagger_LR
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjR4,
            ignition_wire: wires.wireR4,
            intake: intakeR,
            exhaust_system: exhaustRR,
			primary_length: pipe_length_1 + exhaust_stagger_LR
        )
		
    cylinder_bank bRF(bank_params, angle: -45.0 * units.deg, position_x: engine_distance) // Front side of vehicle from right side of engine
    bRF
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjR1,
            ignition_wire: wires.wireR5,
            intake: intakeR,
            exhaust_system: exhaustFR,
			primary_length: pipe_length_4 + exhaust_stagger_FR + exhaust_stagger_LR
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjR2,
            ignition_wire: wires.wireR6,
            intake: intakeR,
            exhaust_system: exhaustFR,
			primary_length: pipe_length_3 + exhaust_stagger_FR + exhaust_stagger_LR
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjR3,
            ignition_wire: wires.wireR7,
            intake: intakeR,
            exhaust_system: exhaustFR,
			primary_length: pipe_length_2 + exhaust_stagger_FR + exhaust_stagger_LR
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rjR4,
            ignition_wire: wires.wireR8,
            intake: intakeR,
            exhaust_system: exhaustFR,
			primary_length: pipe_length_1 + exhaust_stagger_FR + exhaust_stagger_LR
        )

    engine
        .add_cylinder_bank(bLF)
        .add_cylinder_bank(bLR)
        .add_cylinder_bank(bRR)
        .add_cylinder_bank(bRF)

    engine.add_crankshaft(cL).add_crankshaft(cR)

    cizeta_v16_camshaft_builder camshaft(
	    in_lobe_profile: cizeta_v16_lobe_profile_int(),
		ex_lobe_profile: cizeta_v16_lobe_profile_exh()
	)

    bLF.set_cylinder_head (
        cizeta_v16_head(
            intake_camshaft: camshaft.intake_cam_LF,
            exhaust_camshaft: camshaft.exhaust_cam_LF,
			flip_display: true
        )
    )
    bLR.set_cylinder_head (
        cizeta_v16_head(
            intake_camshaft: camshaft.intake_cam_LR,
            exhaust_camshaft: camshaft.exhaust_cam_LR,
            flip_display: false
        )
    )
    bRF.set_cylinder_head (
        cizeta_v16_head(
            intake_camshaft: camshaft.intake_cam_RF,
            exhaust_camshaft: camshaft.exhaust_cam_RF,
			flip_display: false
        )
    )
    bRR.set_cylinder_head (
        cizeta_v16_head(
            intake_camshaft: camshaft.intake_cam_RR,
            exhaust_camshaft: camshaft.exhaust_cam_RR,
            flip_display: true
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, 20 * units.deg)
        .add_sample(1000 * units.rpm, 62 * units.deg)
        .add_sample(2000 * units.rpm, 70 * units.deg)
        .add_sample(3000 * units.rpm, 73 * units.deg)
        .add_sample(4000 * units.rpm, 75 * units.deg)
        .add_sample(5000 * units.rpm, 75 * units.deg)
        .add_sample(6000 * units.rpm, 75 * units.deg)
		.add_sample(7000 * units.rpm, 75 * units.deg)
		.add_sample(8000 * units.rpm, 75 * units.deg)
		.add_sample(9000 * units.rpm, 72 * units.deg)

    engine.add_ignition_module(
        cizeta_v16_distributor(
            wires: wires,
            timing_curve: timing_curve,
            rev_limit: 8550 * units.rpm
        )
    )
}

// 1994 Cizeta V16T
public node cizeta_v16t_vehicle {
    alias output __out:
        vehicle(
            mass: 3750 * units.lb,
            drag_coefficient: 0.35, // guess
            cross_sectional_area: 2.0523 * 1.1049 * (units.m * units.m) * 0.8, // guesstimate
            diff_ratio: 4.11,
            tire_radius: 332.5 * units.mm, // 335/35ZR17
            rolling_resistance: 550 * units.N
        );
}

public node zf_s5_42_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 700 * units.lb_ft
        )
        .add_gear(4.14)
        .add_gear(2.37)
        .add_gear(1.42)
        .add_gear(1.03)
        .add_gear(0.77);
}

public node main {
    set_engine(cizeta_v16())
    set_vehicle(cizeta_v16t_vehicle())
    set_transmission(zf_s5_42_transmission())
}

main()