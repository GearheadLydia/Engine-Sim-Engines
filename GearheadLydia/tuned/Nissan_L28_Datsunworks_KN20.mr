import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

// fantasy version where VTEC works (they never hooked it up)

label cycle(2 * 360 * units.deg)

public node nissan_l28_datsunworks_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 8400 * units.rpm;
	input limiter_duration: 0.06;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wire1, (0.0/6.0) * cycle)
            .connect_wire(wires.wire5, (1.0/6.0) * cycle)
			.connect_wire(wires.wire3, (2.0/6.0) * cycle)
			.connect_wire(wires.wire6, (3.0/6.0) * cycle)
			.connect_wire(wires.wire2, (4.0/6.0) * cycle)
			.connect_wire(wires.wire4, (5.0/6.0) * cycle);
}

private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
    output wire5: ignition_wire();
    output wire6: ignition_wire();
}

private node add_sym_sample {
    input angle;
    input lift;
    input this;
    alias output __out: this;

    this.add_sample(angle * units.deg, lift * units.thou)
    this.add_sample(-angle * units.deg, lift * units.thou)
}


// http://mywikimotors.com/honda-k20a-k20c/

public node nissan_l28_datsunworks_lobe_profile_int_lo {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 244.5 * units.deg,
            gamma: 1.0,
            lift: 9.3 * units.mm,
            steps: 100
        );
}

public node nissan_l28_datsunworks_lobe_profile_exh_lo {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 242.0 * units.deg,
            gamma: 1.0,
            lift: 8.7 * units.mm,
            steps: 100
        );
}

public node nissan_l28_datsunworks_lobe_profile_int_hi {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 280.0 * units.deg,
            gamma: 1.0,
            lift: 12.65 * units.mm,
            steps: 100
        );
}

public node nissan_l28_datsunworks_lobe_profile_exh_hi {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 278.0 * units.deg,
            gamma: 1.0,
            lift: 12.14 * units.mm,
            steps: 100
        );
}

public node nissan_l28_datsunworks_camshaft_builder {
    input in_lobe_profile_lo: nissan_l28_datsunworks_lobe_profile_int_lo();
	input ex_lobe_profile_lo: nissan_l28_datsunworks_lobe_profile_exh_lo();
    input in_lobe_profile_hi: nissan_l28_datsunworks_lobe_profile_int_hi();
    input ex_lobe_profile_hi: nissan_l28_datsunworks_lobe_profile_exh_hi();
    input intake_lobe_center_lo: 122.0 * units.deg;
    input exhaust_lobe_center_lo: 122.0 * units.deg;
    input intake_lobe_center_hi: 94.0 * units.deg;
    input exhaust_lobe_center_hi: 94.0 * units.deg;
    input advance_in_lo: 0.0 * units.deg;
    input advance_ex_lo: 0.0 * units.deg;
	input advance_in_hi: 0.0 * units.deg;
	input advance_ex_hi: 0.0 * units.deg;
    input base_radius: 15 * units.mm;

    output intake_cam_0_lo: _intake_cam_0_lo;
    output exhaust_cam_0_lo: _exhaust_cam_0_lo;

    output intake_cam_0_hi: _intake_cam_0_hi;
    output exhaust_cam_0_hi: _exhaust_cam_0_hi;

    camshaft_parameters params(
        advance: advance_in_lo,
        base_radius: base_radius
    )

    camshaft _intake_cam_0_lo(params, lobe_profile: in_lobe_profile_lo, advance: advance_in_lo)
    camshaft _exhaust_cam_0_lo(params, lobe_profile: ex_lobe_profile_lo, advance: advance_ex_lo)

    camshaft _intake_cam_0_hi(params, lobe_profile: in_lobe_profile_hi, advance: advance_in_hi)
    camshaft _exhaust_cam_0_hi(params, lobe_profile: ex_lobe_profile_hi, advance: advance_ex_hi)


    label rot60(60 * units.deg)
    label rot90(90 * units.deg)
    label rot120(120 * units.deg)
    label rot180(180 * units.deg)
    label rot360(360 * units.deg)

    _intake_cam_0_lo
        .add_lobe(rot360 + intake_lobe_center_lo + 0 * rot120)
		.add_lobe(rot360 + intake_lobe_center_lo + 4 * rot120)
		.add_lobe(rot360 + intake_lobe_center_lo + 2 * rot120)
		.add_lobe(rot360 + intake_lobe_center_lo + 5 * rot120)
		.add_lobe(rot360 + intake_lobe_center_lo + 1 * rot120)
		.add_lobe(rot360 + intake_lobe_center_lo + 3 * rot120)

	_exhaust_cam_0_lo
        .add_lobe(rot360 - exhaust_lobe_center_lo + 0 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center_lo + 4 * rot120)
		.add_lobe(rot360 - exhaust_lobe_center_lo + 2 * rot120)
		.add_lobe(rot360 - exhaust_lobe_center_lo + 5 * rot120)
		.add_lobe(rot360 - exhaust_lobe_center_lo + 1 * rot120)
		.add_lobe(rot360 - exhaust_lobe_center_lo + 3 * rot120)

    _intake_cam_0_hi
        .add_lobe(rot360 + intake_lobe_center_hi + 0 * rot120)
		.add_lobe(rot360 + intake_lobe_center_hi + 4 * rot120)
		.add_lobe(rot360 + intake_lobe_center_hi + 2 * rot120)
		.add_lobe(rot360 + intake_lobe_center_hi + 5 * rot120)
		.add_lobe(rot360 + intake_lobe_center_hi + 1 * rot120)
		.add_lobe(rot360 + intake_lobe_center_hi + 3 * rot120)

	_exhaust_cam_0_hi
        .add_lobe(rot360 - exhaust_lobe_center_hi + 0 * rot120)
        .add_lobe(rot360 - exhaust_lobe_center_hi + 4 * rot120)
		.add_lobe(rot360 - exhaust_lobe_center_hi + 2 * rot120)
		.add_lobe(rot360 - exhaust_lobe_center_hi + 5 * rot120)
		.add_lobe(rot360 - exhaust_lobe_center_hi + 1 * rot120)
		.add_lobe(rot360 - exhaust_lobe_center_hi + 3 * rot120)
}

private node add_flow_sample {
    input lift;
    input flow;
    input this;
    alias output __out: this;

    this.add_sample(lift * units.mm, k_28inH2O(flow))
}

public node nissan_l28_datsunworks_head {
    input cam_in_lo;
	input cam_ex_lo;
    input cam_in_hi;
	input cam_ex_hi;
    input chamber_volume: 51.5 * units.cc; // K24 is 50.5 apparently
    input flip_display: false;
	
	input flow_attenuation_in: 1.0;
	input flow_attenuation_ex: 1.0;
    input lift_scale: 1.0;
    alias output __out: head;

    function intake_flow(1.0 * units.mm)
    intake_flow
        .add_flow_sample( 0 * lift_scale,   0 * flow_attenuation_in)
        .add_flow_sample( 1 * lift_scale,  30 * flow_attenuation_in)
        .add_flow_sample( 2 * lift_scale,  60 * flow_attenuation_in)
        .add_flow_sample( 3 * lift_scale,  90 * flow_attenuation_in)
        .add_flow_sample( 4 * lift_scale, 125 * flow_attenuation_in)
        .add_flow_sample( 5 * lift_scale, 160 * flow_attenuation_in)
        .add_flow_sample( 6 * lift_scale, 195 * flow_attenuation_in)
        .add_flow_sample( 7 * lift_scale, 210 * flow_attenuation_in)
        .add_flow_sample( 8 * lift_scale, 235 * flow_attenuation_in)
        .add_flow_sample( 9 * lift_scale, 270 * flow_attenuation_in)
        .add_flow_sample(10 * lift_scale, 305 * flow_attenuation_in)
        .add_flow_sample(11 * lift_scale, 320 * flow_attenuation_in)
        .add_flow_sample(12 * lift_scale, 335 * flow_attenuation_in)
        .add_flow_sample(13 * lift_scale, 335 * flow_attenuation_in)
        .add_flow_sample(14 * lift_scale, 335 * flow_attenuation_in)

    function exhaust_flow(1.0 * units.mm)
    exhaust_flow
        .add_flow_sample( 0 * lift_scale,   0 * flow_attenuation_ex)
        .add_flow_sample( 1 * lift_scale,  30 * flow_attenuation_ex)
        .add_flow_sample( 2 * lift_scale,  55 * flow_attenuation_ex)
        .add_flow_sample( 3 * lift_scale,  85 * flow_attenuation_ex)
        .add_flow_sample( 4 * lift_scale, 115 * flow_attenuation_ex)
        .add_flow_sample( 5 * lift_scale, 140 * flow_attenuation_ex)
        .add_flow_sample( 6 * lift_scale, 160 * flow_attenuation_ex)
        .add_flow_sample( 7 * lift_scale, 180 * flow_attenuation_ex)
        .add_flow_sample( 8 * lift_scale, 205 * flow_attenuation_ex)
        .add_flow_sample( 9 * lift_scale, 220 * flow_attenuation_ex)
        .add_flow_sample(10 * lift_scale, 240 * flow_attenuation_ex)
        .add_flow_sample(11 * lift_scale, 260 * flow_attenuation_ex)
        .add_flow_sample(12 * lift_scale, 280 * flow_attenuation_ex)
        .add_flow_sample(13 * lift_scale, 280 * flow_attenuation_ex)
        .add_flow_sample(14 * lift_scale, 280 * flow_attenuation_ex)

		
    generic_cylinder_head head(
        chamber_volume: chamber_volume,
        intake_runner_volume: circle_area(1.18 * units.inch) * 5 * units.inch,
        intake_runner_cross_section_area: circle_area(1.18 * units.inch),
        exhaust_runner_volume: circle_area(0.6 * units.inch) * 8 * units.inch,
        exhaust_runner_cross_section_area: circle_area(0.6 * units.inch),

        intake_port_flow: intake_flow,
        exhaust_port_flow: exhaust_flow,
		valvetrain: vtec_valvetrain(
            vtec_intake_camshaft: cam_in_hi,
            vtec_exhaust_camshaft: cam_ex_hi,
            intake_camshaft: cam_in_lo,
            exhaust_camshaft: cam_ex_lo,
            min_rpm: 6000 * units.rpm
		),
        flip_display: flip_display
    )
}

// https://www.zhome.com/ZCMnL/tech/head.htm
// https://forums.hybridz.org/topic/126770-why-l28-piston-deck-height/
// https://nzdatsun.com/forum/viewtopic.php?t=330
public node nissan_l28_datsunworks_engine {
    alias output __out: engine;

    engine engine(
        name: "Nissan L28 - Datsunworks KN20",
        starter_torque: 150 * units.lb_ft,
        starter_speed: 1200 * units.rpm,
        redline: 8000 * units.rpm,
        throttle_gamma: 1.0,
		hf_gain: 0.1,
		jitter: 0.5
    )
	
	label lean_angle(0 * units.deg)

    label bore(86.0 * units.mm)
	label bore_spacing(96.5 * units.mm) // actually 98mm between 3-4, but 96.5mm everywhere else
    label stroke(79.0 * units.mm)
    label rod_length(130.35 * units.mm)
    label rod_mass(250 * units.g)
	label piston_mass(347 * units.g)
    label compression_height(38.10 * units.mm)
	label deck_height((207.85 + 1.2) * units.mm)
	label piston_dome(0.0 * units.cc) // flat to help compensate for larger combustion chambers
    label crank_mass(4.0 * units.kg)
    label flywheel_mass(8.5 * units.kg)
    label flywheel_radius(5.5 * units.inch)

    label crank_moment(
        disk_moment_of_inertia(mass: crank_mass, radius: stroke / 2)
    )
    label flywheel_moment(
        disk_moment_of_inertia(mass: flywheel_mass, radius: flywheel_radius)
    )
    label other_moment( // Moment from cams, pulleys, etc [estimated]
        disk_moment_of_inertia(mass: 15 * units.kg, radius: 8.0 * units.cm)
    )

    wires wires()

    crankshaft c0(
        throw: stroke / 2,
        flywheel_mass: flywheel_mass,
        mass: crank_mass,
        friction_torque: 10.0 * units.lb_ft,
        moment_of_inertia: crank_moment + flywheel_moment + other_moment,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 90.0 * units.deg + lean_angle
    )

    rod_journal rj0(angle:  0  * units.deg)
    rod_journal rj1(angle: 120 * units.deg)
    rod_journal rj2(angle: 240 * units.deg)
    rod_journal rj3(angle: 240 * units.deg)
    rod_journal rj4(angle: 120 * units.deg)
    rod_journal rj5(angle:  0  * units.deg)
	
    c0
        .add_rod_journal(rj0)
        .add_rod_journal(rj1)
        .add_rod_journal(rj2)
        .add_rod_journal(rj3)
        .add_rod_journal(rj4)
        .add_rod_journal(rj5)

    piston_parameters piston_params(
        mass: piston_mass,
        //blowby: k_28inH2O(0.1),
        compression_height: compression_height,
        wrist_pin_position: 0.0,
        displacement: piston_dome
    )

    connecting_rod_parameters cr_params(
        mass: rod_mass,
        moment_of_inertia: rod_moment_of_inertia(
            mass: rod_mass,
            length: rod_length
        ),
        center_of_mass: 0.0,
        length: rod_length
    )

    cylinder_bank_parameters bank_params(
        bore: bore,
        deck_height: deck_height
    )

    intake intake(
        plenum_volume: 1.0 * units.L,
        plenum_cross_section_area: 50.0 * units.cm2,
        intake_flow_rate: k_carb(750.0),
        idle_flow_rate: k_carb(0.001),
        idle_throttle_plate_position: 0.998,
        throttle_gamma: 1.0,
        runner_flow_rate: k_carb(450.0),
        runner_length: 5.0 * units.inch,
        velocity_decay: 0.1
    )
	
	label exhaust_radius((3.5 * units.inch)/2)

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(600.0),
        primary_tube_length: 18 * units.inch,
        primary_flow_rate: k_carb(250.0),
        velocity_decay: 1.0, //0.5
		collector_cross_section_area: circle_area(exhaust_radius),
		length: 2200 * units.mm,
		volume: 2200 * units.mm * circle_area(exhaust_radius)
    )

    exhaust_system exhaust(es_params, audio_volume: 1.0 * 0.005, impulse_response: ir_lib.default_0)
	
	label pipe_length_1(2.5 * units.inch)
	label pipe_length_2(2.0 * units.inch)
	label pipe_length_3(1.5 * units.inch)
	label pipe_length_4(1.0 * units.inch)
	label pipe_length_5(0.5 * units.inch)
	label pipe_length_6(0.0 * units.inch)
 
    cylinder_bank b0(bank_params, angle: 0 * units.deg + lean_angle)
    b0
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj0,
            ignition_wire: wires.wire1,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_1,
			sound_attenuation: 1.0
        )
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            ignition_wire: wires.wire2,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_2,
			sound_attenuation: 1.0
        )
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            ignition_wire: wires.wire3,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_3,
			sound_attenuation: 1.0
        )
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            ignition_wire: wires.wire4,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_4,
			sound_attenuation: 1.0
        )
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            ignition_wire: wires.wire5,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_5,
			sound_attenuation: 1.0
        )
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.1)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj5,
            ignition_wire: wires.wire6,
            intake: intake,
            exhaust_system: exhaust,
			primary_length: pipe_length_6,
			sound_attenuation: 1.0
        )

    engine
        .add_cylinder_bank(b0)

    engine.add_crankshaft(c0)

    nissan_l28_datsunworks_camshaft_builder camshaft()

    b0.set_cylinder_head (
        nissan_l28_datsunworks_head(
            cam_in_lo: camshaft.intake_cam_0_lo,
			cam_in_hi: camshaft.intake_cam_0_hi,
            cam_ex_lo: camshaft.exhaust_cam_0_lo,
			cam_ex_hi: camshaft.exhaust_cam_0_hi,
			flip_display: false // exhaust is always on the right, cross-flow heads put the intake on the left
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, 20 * units.deg)
        .add_sample(1000 * units.rpm, 50 * units.deg)
        .add_sample(2000 * units.rpm, 55 * units.deg)
        .add_sample(3000 * units.rpm, 54 * units.deg)
        .add_sample(4000 * units.rpm, 53 * units.deg)
        .add_sample(5000 * units.rpm, 52 * units.deg)
        .add_sample(6000 * units.rpm, 51 * units.deg)
        .add_sample(7000 * units.rpm, 50 * units.deg)
        .add_sample(8000 * units.rpm, 50 * units.deg)
        .add_sample(9000 * units.rpm, 50 * units.deg)

    engine.add_ignition_module(
        nissan_l28_datsunworks_distributor(
            wires: wires,
            timing_curve: timing_curve
        ))
}

// 1972 Datsun 240Z (S30)
public node datsun_240z_s30_vehicle {
    alias output __out:
        vehicle(
            mass: 1070 * units.kg,
            drag_coefficient: 0.42,
            cross_sectional_area: 1.74 * (units.m * units.m),
            diff_ratio: 3.900,
            tire_radius: 313.5 * units.mm, // 195/70HR14
            rolling_resistance: 400 * units.N
        );
}

// "wide ratio" gear ratios
// there was also a "close ratio" 1981-1983
// and a non-US 240Z with closer ratios still
public node nissan_fs5c71b_wr_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 600 * units.lb_ft
        )
        .add_gear(3.321)
        .add_gear(2.077)
        .add_gear(1.308)
        .add_gear(1.000)
        .add_gear(0.864);
}

public node main {
	set_engine(nissan_l28_datsunworks_engine())
    set_vehicle(datsun_240z_s30_vehicle())
    set_transmission(nissan_fs5c71b_wr_transmission())
}

main()